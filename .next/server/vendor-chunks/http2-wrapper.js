"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/http2-wrapper";
exports.ids = ["vendor-chunks/http2-wrapper"];
exports.modules = {

/***/ "(rsc)/./node_modules/http2-wrapper/source/agent.js":
/*!****************************************************!*\
  !*** ./node_modules/http2-wrapper/source/agent.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// See https://github.com/facebook/jest/issues/2549\n// eslint-disable-next-line node/prefer-global/url\nconst {URL} = __webpack_require__(/*! url */ \"url\");\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst http2 = __webpack_require__(/*! http2 */ \"http2\");\nconst QuickLRU = __webpack_require__(/*! quick-lru */ \"(rsc)/./node_modules/quick-lru/index.js\");\nconst delayAsyncDestroy = __webpack_require__(/*! ./utils/delay-async-destroy.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/delay-async-destroy.js\");\n\nconst kCurrentStreamCount = Symbol('currentStreamCount');\nconst kRequest = Symbol('request');\nconst kOriginSet = Symbol('cachedOriginSet');\nconst kGracefullyClosing = Symbol('gracefullyClosing');\nconst kLength = Symbol('length');\n\nconst nameKeys = [\n\t// Not an Agent option actually\n\t'createConnection',\n\n\t// `http2.connect()` options\n\t'maxDeflateDynamicTableSize',\n\t'maxSettings',\n\t'maxSessionMemory',\n\t'maxHeaderListPairs',\n\t'maxOutstandingPings',\n\t'maxReservedRemoteStreams',\n\t'maxSendHeaderBlockLength',\n\t'paddingStrategy',\n\t'peerMaxConcurrentStreams',\n\t'settings',\n\n\t// `tls.connect()` source options\n\t'family',\n\t'localAddress',\n\t'rejectUnauthorized',\n\n\t// `tls.connect()` secure context options\n\t'pskCallback',\n\t'minDHSize',\n\n\t// `tls.connect()` destination options\n\t// - `servername` is automatically validated, skip it\n\t// - `host` and `port` just describe the destination server,\n\t'path',\n\t'socket',\n\n\t// `tls.createSecureContext()` options\n\t'ca',\n\t'cert',\n\t'sigalgs',\n\t'ciphers',\n\t'clientCertEngine',\n\t'crl',\n\t'dhparam',\n\t'ecdhCurve',\n\t'honorCipherOrder',\n\t'key',\n\t'privateKeyEngine',\n\t'privateKeyIdentifier',\n\t'maxVersion',\n\t'minVersion',\n\t'pfx',\n\t'secureOptions',\n\t'secureProtocol',\n\t'sessionIdContext',\n\t'ticketKeys'\n];\n\nconst getSortedIndex = (array, value, compare) => {\n\tlet low = 0;\n\tlet high = array.length;\n\n\twhile (low < high) {\n\t\tconst mid = (low + high) >>> 1;\n\n\t\tif (compare(array[mid], value)) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\n\treturn low;\n};\n\nconst compareSessions = (a, b) => a.remoteSettings.maxConcurrentStreams > b.remoteSettings.maxConcurrentStreams;\n\n// See https://tools.ietf.org/html/rfc8336\nconst closeCoveredSessions = (where, session) => {\n\t// Clients SHOULD NOT emit new requests on any connection whose Origin\n\t// Set is a proper subset of another connection's Origin Set, and they\n\t// SHOULD close it once all outstanding requests are satisfied.\n\tfor (let index = 0; index < where.length; index++) {\n\t\tconst coveredSession = where[index];\n\n\t\tif (\n\t\t\t// Unfortunately `.every()` returns true for an empty array\n\t\t\tcoveredSession[kOriginSet].length > 0\n\n\t\t\t// The set is a proper subset when its length is less than the other set.\n\t\t\t&& coveredSession[kOriginSet].length < session[kOriginSet].length\n\n\t\t\t// And the other set includes all elements of the subset.\n\t\t\t&& coveredSession[kOriginSet].every(origin => session[kOriginSet].includes(origin))\n\n\t\t\t// Makes sure that the session can handle all requests from the covered session.\n\t\t\t&& (coveredSession[kCurrentStreamCount] + session[kCurrentStreamCount]) <= session.remoteSettings.maxConcurrentStreams\n\t\t) {\n\t\t\t// This allows pending requests to finish and prevents making new requests.\n\t\t\tgracefullyClose(coveredSession);\n\t\t}\n\t}\n};\n\n// This is basically inverted `closeCoveredSessions(...)`.\nconst closeSessionIfCovered = (where, coveredSession) => {\n\tfor (let index = 0; index < where.length; index++) {\n\t\tconst session = where[index];\n\n\t\tif (\n\t\t\tcoveredSession[kOriginSet].length > 0\n\t\t\t&& coveredSession[kOriginSet].length < session[kOriginSet].length\n\t\t\t&& coveredSession[kOriginSet].every(origin => session[kOriginSet].includes(origin))\n\t\t\t&& (coveredSession[kCurrentStreamCount] + session[kCurrentStreamCount]) <= session.remoteSettings.maxConcurrentStreams\n\t\t) {\n\t\t\tgracefullyClose(coveredSession);\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nconst gracefullyClose = session => {\n\tsession[kGracefullyClosing] = true;\n\n\tif (session[kCurrentStreamCount] === 0) {\n\t\tsession.close();\n\t}\n};\n\nclass Agent extends EventEmitter {\n\tconstructor({timeout = 0, maxSessions = Number.POSITIVE_INFINITY, maxEmptySessions = 10, maxCachedTlsSessions = 100} = {}) {\n\t\tsuper();\n\n\t\t// SESSIONS[NORMALIZED_OPTIONS] = [];\n\t\tthis.sessions = {};\n\n\t\t// The queue for creating new sessions. It looks like this:\n\t\t// QUEUE[NORMALIZED_OPTIONS][NORMALIZED_ORIGIN] = ENTRY_FUNCTION\n\t\t//\n\t\t// It's faster when there are many origins. If there's only one, then QUEUE[`${options}:${origin}`] is faster.\n\t\t// I guess object creation / deletion is causing the slowdown.\n\t\t//\n\t\t// The entry function has `listeners`, `completed` and `destroyed` properties.\n\t\t// `listeners` is an array of objects containing `resolve` and `reject` functions.\n\t\t// `completed` is a boolean. It's set to true after ENTRY_FUNCTION is executed.\n\t\t// `destroyed` is a boolean. If it's set to true, the session will be destroyed if hasn't connected yet.\n\t\tthis.queue = {};\n\n\t\t// Each session will use this timeout value.\n\t\tthis.timeout = timeout;\n\n\t\t// Max sessions in total\n\t\tthis.maxSessions = maxSessions;\n\n\t\t// Max empty sessions in total\n\t\tthis.maxEmptySessions = maxEmptySessions;\n\n\t\tthis._emptySessionCount = 0;\n\t\tthis._sessionCount = 0;\n\n\t\t// We don't support push streams by default.\n\t\tthis.settings = {\n\t\t\tenablePush: false,\n\t\t\tinitialWindowSize: 1024 * 1024 * 32 // 32MB, see https://github.com/nodejs/node/issues/38426\n\t\t};\n\n\t\t// Reusing TLS sessions increases performance.\n\t\tthis.tlsSessionCache = new QuickLRU({maxSize: maxCachedTlsSessions});\n\t}\n\n\tget protocol() {\n\t\treturn 'https:';\n\t}\n\n\tnormalizeOptions(options) {\n\t\tlet normalized = '';\n\n\t\tfor (let index = 0; index < nameKeys.length; index++) {\n\t\t\tconst key = nameKeys[index];\n\n\t\t\tnormalized += ':';\n\n\t\t\tif (options && options[key] !== undefined) {\n\t\t\t\tnormalized += options[key];\n\t\t\t}\n\t\t}\n\n\t\treturn normalized;\n\t}\n\n\t_processQueue() {\n\t\tif (this._sessionCount >= this.maxSessions) {\n\t\t\tthis.closeEmptySessions(this.maxSessions - this._sessionCount + 1);\n\t\t\treturn;\n\t\t}\n\n\t\t// eslint-disable-next-line guard-for-in\n\t\tfor (const normalizedOptions in this.queue) {\n\t\t\t// eslint-disable-next-line guard-for-in\n\t\t\tfor (const normalizedOrigin in this.queue[normalizedOptions]) {\n\t\t\t\tconst item = this.queue[normalizedOptions][normalizedOrigin];\n\n\t\t\t\t// The entry function can be run only once.\n\t\t\t\tif (!item.completed) {\n\t\t\t\t\titem.completed = true;\n\n\t\t\t\t\titem();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_isBetterSession(thisStreamCount, thatStreamCount) {\n\t\treturn thisStreamCount > thatStreamCount;\n\t}\n\n\t_accept(session, listeners, normalizedOrigin, options) {\n\t\tlet index = 0;\n\n\t\twhile (index < listeners.length && session[kCurrentStreamCount] < session.remoteSettings.maxConcurrentStreams) {\n\t\t\t// We assume `resolve(...)` calls `request(...)` *directly*,\n\t\t\t// otherwise the session will get overloaded.\n\t\t\tlisteners[index].resolve(session);\n\n\t\t\tindex++;\n\t\t}\n\n\t\tlisteners.splice(0, index);\n\n\t\tif (listeners.length > 0) {\n\t\t\tthis.getSession(normalizedOrigin, options, listeners);\n\t\t\tlisteners.length = 0;\n\t\t}\n\t}\n\n\tgetSession(origin, options, listeners) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (Array.isArray(listeners) && listeners.length > 0) {\n\t\t\t\tlisteners = [...listeners];\n\n\t\t\t\t// Resolve the current promise ASAP, we're just moving the listeners.\n\t\t\t\t// They will be executed at a different time.\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tlisteners = [{resolve, reject}];\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Parse origin\n\t\t\t\tif (typeof origin === 'string') {\n\t\t\t\t\torigin = new URL(origin);\n\t\t\t\t} else if (!(origin instanceof URL)) {\n\t\t\t\t\tthrow new TypeError('The `origin` argument needs to be a string or an URL object');\n\t\t\t\t}\n\n\t\t\t\tif (options) {\n\t\t\t\t\t// Validate servername\n\t\t\t\t\tconst {servername} = options;\n\t\t\t\t\tconst {hostname} = origin;\n\t\t\t\t\tif (servername && hostname !== servername) {\n\t\t\t\t\t\tthrow new Error(`Origin ${hostname} differs from servername ${servername}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tfor (let index = 0; index < listeners.length; index++) {\n\t\t\t\t\tlisteners[index].reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst normalizedOptions = this.normalizeOptions(options);\n\t\t\tconst normalizedOrigin = origin.origin;\n\n\t\t\tif (normalizedOptions in this.sessions) {\n\t\t\t\tconst sessions = this.sessions[normalizedOptions];\n\n\t\t\t\tlet maxConcurrentStreams = -1;\n\t\t\t\tlet currentStreamsCount = -1;\n\t\t\t\tlet optimalSession;\n\n\t\t\t\t// We could just do this.sessions[normalizedOptions].find(...) but that isn't optimal.\n\t\t\t\t// Additionally, we are looking for session which has biggest current pending streams count.\n\t\t\t\t//\n\t\t\t\t// |------------| |------------| |------------| |------------|\n\t\t\t\t// | Session: A | | Session: B | | Session: C | | Session: D |\n\t\t\t\t// | Pending: 5 |-| Pending: 8 |-| Pending: 9 |-| Pending: 4 |\n\t\t\t\t// | Max:    10 | | Max:    10 | | Max:     9 | | Max:     5 |\n\t\t\t\t// |------------| |------------| |------------| |------------|\n\t\t\t\t//                     ^\n\t\t\t\t//                     |\n\t\t\t\t//     pick this one  --\n\t\t\t\t//\n\t\t\t\tfor (let index = 0; index < sessions.length; index++) {\n\t\t\t\t\tconst session = sessions[index];\n\n\t\t\t\t\tconst sessionMaxConcurrentStreams = session.remoteSettings.maxConcurrentStreams;\n\n\t\t\t\t\tif (sessionMaxConcurrentStreams < maxConcurrentStreams) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!session[kOriginSet].includes(normalizedOrigin)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst sessionCurrentStreamsCount = session[kCurrentStreamCount];\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tsessionCurrentStreamsCount >= sessionMaxConcurrentStreams\n\t\t\t\t\t\t|| session[kGracefullyClosing]\n\t\t\t\t\t\t// Unfortunately the `close` event isn't called immediately,\n\t\t\t\t\t\t// so `session.destroyed` is `true`, but `session.closed` is `false`.\n\t\t\t\t\t\t|| session.destroyed\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// We only need set this once.\n\t\t\t\t\tif (!optimalSession) {\n\t\t\t\t\t\tmaxConcurrentStreams = sessionMaxConcurrentStreams;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Either get the session which has biggest current stream count or the lowest.\n\t\t\t\t\tif (this._isBetterSession(sessionCurrentStreamsCount, currentStreamsCount)) {\n\t\t\t\t\t\toptimalSession = session;\n\t\t\t\t\t\tcurrentStreamsCount = sessionCurrentStreamsCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (optimalSession) {\n\t\t\t\t\tthis._accept(optimalSession, listeners, normalizedOrigin, options);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (normalizedOptions in this.queue) {\n\t\t\t\tif (normalizedOrigin in this.queue[normalizedOptions]) {\n\t\t\t\t\t// There's already an item in the queue, just attach ourselves to it.\n\t\t\t\t\tthis.queue[normalizedOptions][normalizedOrigin].listeners.push(...listeners);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.queue[normalizedOptions] = {\n\t\t\t\t\t[kLength]: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// The entry must be removed from the queue IMMEDIATELY when:\n\t\t\t// 1. the session connects successfully,\n\t\t\t// 2. an error occurs.\n\t\t\tconst removeFromQueue = () => {\n\t\t\t\t// Our entry can be replaced. We cannot remove the new one.\n\t\t\t\tif (normalizedOptions in this.queue && this.queue[normalizedOptions][normalizedOrigin] === entry) {\n\t\t\t\t\tdelete this.queue[normalizedOptions][normalizedOrigin];\n\n\t\t\t\t\tif (--this.queue[normalizedOptions][kLength] === 0) {\n\t\t\t\t\t\tdelete this.queue[normalizedOptions];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// The main logic is here\n\t\t\tconst entry = async () => {\n\t\t\t\tthis._sessionCount++;\n\n\t\t\t\tconst name = `${normalizedOrigin}:${normalizedOptions}`;\n\t\t\t\tlet receivedSettings = false;\n\t\t\t\tlet socket;\n\n\t\t\t\ttry {\n\t\t\t\t\tconst computedOptions = {...options};\n\n\t\t\t\t\tif (computedOptions.settings === undefined) {\n\t\t\t\t\t\tcomputedOptions.settings = this.settings;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (computedOptions.session === undefined) {\n\t\t\t\t\t\tcomputedOptions.session = this.tlsSessionCache.get(name);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst createConnection = computedOptions.createConnection || this.createConnection;\n\n\t\t\t\t\t// A hacky workaround to enable async `createConnection`\n\t\t\t\t\tsocket = await createConnection.call(this, origin, computedOptions);\n\t\t\t\t\tcomputedOptions.createConnection = () => socket;\n\n\t\t\t\t\tconst session = http2.connect(origin, computedOptions);\n\t\t\t\t\tsession[kCurrentStreamCount] = 0;\n\t\t\t\t\tsession[kGracefullyClosing] = false;\n\n\t\t\t\t\t// Node.js return https://false:443 instead of https://1.1.1.1:443\n\t\t\t\t\tconst getOriginSet = () => {\n\t\t\t\t\t\tconst {socket} = session;\n\n\t\t\t\t\t\tlet originSet;\n\t\t\t\t\t\tif (socket.servername === false) {\n\t\t\t\t\t\t\tsocket.servername = socket.remoteAddress;\n\t\t\t\t\t\t\toriginSet = session.originSet;\n\t\t\t\t\t\t\tsocket.servername = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toriginSet = session.originSet;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn originSet;\n\t\t\t\t\t};\n\n\t\t\t\t\tconst isFree = () => session[kCurrentStreamCount] < session.remoteSettings.maxConcurrentStreams;\n\n\t\t\t\t\tsession.socket.once('session', tlsSession => {\n\t\t\t\t\t\tthis.tlsSessionCache.set(name, tlsSession);\n\t\t\t\t\t});\n\n\t\t\t\t\tsession.once('error', error => {\n\t\t\t\t\t\t// Listeners are empty when the session successfully connected.\n\t\t\t\t\t\tfor (let index = 0; index < listeners.length; index++) {\n\t\t\t\t\t\t\tlisteners[index].reject(error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The connection got broken, purge the cache.\n\t\t\t\t\t\tthis.tlsSessionCache.delete(name);\n\t\t\t\t\t});\n\n\t\t\t\t\tsession.setTimeout(this.timeout, () => {\n\t\t\t\t\t\t// Terminates all streams owned by this session.\n\t\t\t\t\t\tsession.destroy();\n\t\t\t\t\t});\n\n\t\t\t\t\tsession.once('close', () => {\n\t\t\t\t\t\tthis._sessionCount--;\n\n\t\t\t\t\t\tif (receivedSettings) {\n\t\t\t\t\t\t\t// Assumes session `close` is emitted after request `close`\n\t\t\t\t\t\t\tthis._emptySessionCount--;\n\n\t\t\t\t\t\t\t// This cannot be moved to the stream logic,\n\t\t\t\t\t\t\t// because there may be a session that hadn't made a single request.\n\t\t\t\t\t\t\tconst where = this.sessions[normalizedOptions];\n\n\t\t\t\t\t\t\tif (where.length === 1) {\n\t\t\t\t\t\t\t\tdelete this.sessions[normalizedOptions];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twhere.splice(where.indexOf(session), 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Broken connection\n\t\t\t\t\t\t\tremoveFromQueue();\n\n\t\t\t\t\t\t\tconst error = new Error('Session closed without receiving a SETTINGS frame');\n\t\t\t\t\t\t\terror.code = 'HTTP2WRAPPER_NOSETTINGS';\n\n\t\t\t\t\t\t\tfor (let index = 0; index < listeners.length; index++) {\n\t\t\t\t\t\t\t\tlisteners[index].reject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// There may be another session awaiting.\n\t\t\t\t\t\tthis._processQueue();\n\t\t\t\t\t});\n\n\t\t\t\t\t// Iterates over the queue and processes listeners.\n\t\t\t\t\tconst processListeners = () => {\n\t\t\t\t\t\tconst queue = this.queue[normalizedOptions];\n\t\t\t\t\t\tif (!queue) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst originSet = session[kOriginSet];\n\n\t\t\t\t\t\tfor (let index = 0; index < originSet.length; index++) {\n\t\t\t\t\t\t\tconst origin = originSet[index];\n\n\t\t\t\t\t\t\tif (origin in queue) {\n\t\t\t\t\t\t\t\tconst {listeners, completed} = queue[origin];\n\n\t\t\t\t\t\t\t\tlet index = 0;\n\n\t\t\t\t\t\t\t\t// Prevents session overloading.\n\t\t\t\t\t\t\t\twhile (index < listeners.length && isFree()) {\n\t\t\t\t\t\t\t\t\t// We assume `resolve(...)` calls `request(...)` *directly*,\n\t\t\t\t\t\t\t\t\t// otherwise the session will get overloaded.\n\t\t\t\t\t\t\t\t\tlisteners[index].resolve(session);\n\n\t\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tqueue[origin].listeners.splice(0, index);\n\n\t\t\t\t\t\t\t\tif (queue[origin].listeners.length === 0 && !completed) {\n\t\t\t\t\t\t\t\t\tdelete queue[origin];\n\n\t\t\t\t\t\t\t\t\tif (--queue[kLength] === 0) {\n\t\t\t\t\t\t\t\t\t\tdelete this.queue[normalizedOptions];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// We're no longer free, no point in continuing.\n\t\t\t\t\t\t\t\tif (!isFree()) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// The Origin Set cannot shrink. No need to check if it suddenly became covered by another one.\n\t\t\t\t\tsession.on('origin', () => {\n\t\t\t\t\t\tsession[kOriginSet] = getOriginSet() || [];\n\t\t\t\t\t\tsession[kGracefullyClosing] = false;\n\t\t\t\t\t\tcloseSessionIfCovered(this.sessions[normalizedOptions], session);\n\n\t\t\t\t\t\tif (session[kGracefullyClosing] || !isFree()) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprocessListeners();\n\n\t\t\t\t\t\tif (!isFree()) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Close covered sessions (if possible).\n\t\t\t\t\t\tcloseCoveredSessions(this.sessions[normalizedOptions], session);\n\t\t\t\t\t});\n\n\t\t\t\t\tsession.once('remoteSettings', () => {\n\t\t\t\t\t\t// The Agent could have been destroyed already.\n\t\t\t\t\t\tif (entry.destroyed) {\n\t\t\t\t\t\t\tconst error = new Error('Agent has been destroyed');\n\n\t\t\t\t\t\t\tfor (let index = 0; index < listeners.length; index++) {\n\t\t\t\t\t\t\t\tlisteners[index].reject(error);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsession.destroy();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// See https://github.com/nodejs/node/issues/38426\n\t\t\t\t\t\tif (session.setLocalWindowSize) {\n\t\t\t\t\t\t\tsession.setLocalWindowSize(1024 * 1024 * 4); // 4 MB\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsession[kOriginSet] = getOriginSet() || [];\n\n\t\t\t\t\t\tif (session.socket.encrypted) {\n\t\t\t\t\t\t\tconst mainOrigin = session[kOriginSet][0];\n\t\t\t\t\t\t\tif (mainOrigin !== normalizedOrigin) {\n\t\t\t\t\t\t\t\tconst error = new Error(`Requested origin ${normalizedOrigin} does not match server ${mainOrigin}`);\n\n\t\t\t\t\t\t\t\tfor (let index = 0; index < listeners.length; index++) {\n\t\t\t\t\t\t\t\t\tlisteners[index].reject(error);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsession.destroy();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tremoveFromQueue();\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst where = this.sessions;\n\n\t\t\t\t\t\t\tif (normalizedOptions in where) {\n\t\t\t\t\t\t\t\tconst sessions = where[normalizedOptions];\n\t\t\t\t\t\t\t\tsessions.splice(getSortedIndex(sessions, session, compareSessions), 0, session);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twhere[normalizedOptions] = [session];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treceivedSettings = true;\n\t\t\t\t\t\tthis._emptySessionCount++;\n\n\t\t\t\t\t\tthis.emit('session', session);\n\t\t\t\t\t\tthis._accept(session, listeners, normalizedOrigin, options);\n\n\t\t\t\t\t\tif (session[kCurrentStreamCount] === 0 && this._emptySessionCount > this.maxEmptySessions) {\n\t\t\t\t\t\t\tthis.closeEmptySessions(this._emptySessionCount - this.maxEmptySessions);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `session.remoteSettings.maxConcurrentStreams` might get increased\n\t\t\t\t\t\tsession.on('remoteSettings', () => {\n\t\t\t\t\t\t\tif (!isFree()) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprocessListeners();\n\n\t\t\t\t\t\t\tif (!isFree()) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// In case the Origin Set changes\n\t\t\t\t\t\t\tcloseCoveredSessions(this.sessions[normalizedOptions], session);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// Shim `session.request()` in order to catch all streams\n\t\t\t\t\tsession[kRequest] = session.request;\n\t\t\t\t\tsession.request = (headers, streamOptions) => {\n\t\t\t\t\t\tif (session[kGracefullyClosing]) {\n\t\t\t\t\t\t\tthrow new Error('The session is gracefully closing. No new streams are allowed.');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst stream = session[kRequest](headers, streamOptions);\n\n\t\t\t\t\t\t// The process won't exit until the session is closed or all requests are gone.\n\t\t\t\t\t\tsession.ref();\n\n\t\t\t\t\t\tif (session[kCurrentStreamCount]++ === 0) {\n\t\t\t\t\t\t\tthis._emptySessionCount--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstream.once('close', () => {\n\t\t\t\t\t\t\tif (--session[kCurrentStreamCount] === 0) {\n\t\t\t\t\t\t\t\tthis._emptySessionCount++;\n\t\t\t\t\t\t\t\tsession.unref();\n\n\t\t\t\t\t\t\t\tif (this._emptySessionCount > this.maxEmptySessions || session[kGracefullyClosing]) {\n\t\t\t\t\t\t\t\t\tsession.close();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (session.destroyed || session.closed) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (isFree() && !closeSessionIfCovered(this.sessions[normalizedOptions], session)) {\n\t\t\t\t\t\t\t\tcloseCoveredSessions(this.sessions[normalizedOptions], session);\n\t\t\t\t\t\t\t\tprocessListeners();\n\n\t\t\t\t\t\t\t\tif (session[kCurrentStreamCount] === 0) {\n\t\t\t\t\t\t\t\t\tthis._processQueue();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn stream;\n\t\t\t\t\t};\n\t\t\t\t} catch (error) {\n\t\t\t\t\tremoveFromQueue();\n\t\t\t\t\tthis._sessionCount--;\n\n\t\t\t\t\tfor (let index = 0; index < listeners.length; index++) {\n\t\t\t\t\t\tlisteners[index].reject(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tentry.listeners = listeners;\n\t\t\tentry.completed = false;\n\t\t\tentry.destroyed = false;\n\n\t\t\tthis.queue[normalizedOptions][normalizedOrigin] = entry;\n\t\t\tthis.queue[normalizedOptions][kLength]++;\n\t\t\tthis._processQueue();\n\t\t});\n\t}\n\n\trequest(origin, options, headers, streamOptions) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.getSession(origin, options, [{\n\t\t\t\treject,\n\t\t\t\tresolve: session => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst stream = session.request(headers, streamOptions);\n\n\t\t\t\t\t\t// Do not throw before `request(...)` has been awaited\n\t\t\t\t\t\tdelayAsyncDestroy(stream);\n\n\t\t\t\t\t\tresolve(stream);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]);\n\t\t});\n\t}\n\n\tasync createConnection(origin, options) {\n\t\treturn Agent.connect(origin, options);\n\t}\n\n\tstatic connect(origin, options) {\n\t\toptions.ALPNProtocols = ['h2'];\n\n\t\tconst port = origin.port || 443;\n\t\tconst host = origin.hostname;\n\n\t\tif (typeof options.servername === 'undefined') {\n\t\t\toptions.servername = host;\n\t\t}\n\n\t\tconst socket = tls.connect(port, host, options);\n\n\t\tif (options.socket) {\n\t\t\tsocket._peername = {\n\t\t\t\tfamily: undefined,\n\t\t\t\taddress: undefined,\n\t\t\t\tport\n\t\t\t};\n\t\t}\n\n\t\treturn socket;\n\t}\n\n\tcloseEmptySessions(maxCount = Number.POSITIVE_INFINITY) {\n\t\tlet closedCount = 0;\n\n\t\tconst {sessions} = this;\n\n\t\t// eslint-disable-next-line guard-for-in\n\t\tfor (const key in sessions) {\n\t\t\tconst thisSessions = sessions[key];\n\n\t\t\tfor (let index = 0; index < thisSessions.length; index++) {\n\t\t\t\tconst session = thisSessions[index];\n\n\t\t\t\tif (session[kCurrentStreamCount] === 0) {\n\t\t\t\t\tclosedCount++;\n\t\t\t\t\tsession.close();\n\n\t\t\t\t\tif (closedCount >= maxCount) {\n\t\t\t\t\t\treturn closedCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn closedCount;\n\t}\n\n\tdestroy(reason) {\n\t\tconst {sessions, queue} = this;\n\n\t\t// eslint-disable-next-line guard-for-in\n\t\tfor (const key in sessions) {\n\t\t\tconst thisSessions = sessions[key];\n\n\t\t\tfor (let index = 0; index < thisSessions.length; index++) {\n\t\t\t\tthisSessions[index].destroy(reason);\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line guard-for-in\n\t\tfor (const normalizedOptions in queue) {\n\t\t\tconst entries = queue[normalizedOptions];\n\n\t\t\t// eslint-disable-next-line guard-for-in\n\t\t\tfor (const normalizedOrigin in entries) {\n\t\t\t\tentries[normalizedOrigin].destroyed = true;\n\t\t\t}\n\t\t}\n\n\t\t// New requests should NOT attach to destroyed sessions\n\t\tthis.queue = {};\n\t\tthis.tlsSessionCache.clear();\n\t}\n\n\tget emptySessionCount() {\n\t\treturn this._emptySessionCount;\n\t}\n\n\tget pendingSessionCount() {\n\t\treturn this._sessionCount - this._emptySessionCount;\n\t}\n\n\tget sessionCount() {\n\t\treturn this._sessionCount;\n\t}\n}\n\nAgent.kCurrentStreamCount = kCurrentStreamCount;\nAgent.kGracefullyClosing = kGracefullyClosing;\n\nmodule.exports = {\n\tAgent,\n\tglobalAgent: new Agent()\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/agent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/auto.js":
/*!***************************************************!*\
  !*** ./node_modules/http2-wrapper/source/auto.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// See https://github.com/facebook/jest/issues/2549\n// eslint-disable-next-line node/prefer-global/url\nconst {URL, urlToHttpOptions} = __webpack_require__(/*! url */ \"url\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst resolveALPN = __webpack_require__(/*! resolve-alpn */ \"(rsc)/./node_modules/resolve-alpn/index.js\");\nconst QuickLRU = __webpack_require__(/*! quick-lru */ \"(rsc)/./node_modules/quick-lru/index.js\");\nconst {Agent, globalAgent} = __webpack_require__(/*! ./agent.js */ \"(rsc)/./node_modules/http2-wrapper/source/agent.js\");\nconst Http2ClientRequest = __webpack_require__(/*! ./client-request.js */ \"(rsc)/./node_modules/http2-wrapper/source/client-request.js\");\nconst calculateServerName = __webpack_require__(/*! ./utils/calculate-server-name.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/calculate-server-name.js\");\nconst delayAsyncDestroy = __webpack_require__(/*! ./utils/delay-async-destroy.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/delay-async-destroy.js\");\n\nconst cache = new QuickLRU({maxSize: 100});\nconst queue = new Map();\n\nconst installSocket = (agent, socket, options) => {\n\tsocket._httpMessage = {shouldKeepAlive: true};\n\n\tconst onFree = () => {\n\t\tagent.emit('free', socket, options);\n\t};\n\n\tsocket.on('free', onFree);\n\n\tconst onClose = () => {\n\t\tagent.removeSocket(socket, options);\n\t};\n\n\tsocket.on('close', onClose);\n\n\tconst onTimeout = () => {\n\t\tconst {freeSockets} = agent;\n\n\t\tfor (const sockets of Object.values(freeSockets)) {\n\t\t\tif (sockets.includes(socket)) {\n\t\t\t\tsocket.destroy();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t};\n\n\tsocket.on('timeout', onTimeout);\n\n\tconst onRemove = () => {\n\t\tagent.removeSocket(socket, options);\n\t\tsocket.off('close', onClose);\n\t\tsocket.off('free', onFree);\n\t\tsocket.off('timeout', onTimeout);\n\t\tsocket.off('agentRemove', onRemove);\n\t};\n\n\tsocket.on('agentRemove', onRemove);\n\n\tagent.emit('free', socket, options);\n};\n\nconst createResolveProtocol = (cache, queue = new Map(), connect = undefined) => {\n\treturn async options => {\n\t\tconst name = `${options.host}:${options.port}:${options.ALPNProtocols.sort()}`;\n\n\t\tif (!cache.has(name)) {\n\t\t\tif (queue.has(name)) {\n\t\t\t\tconst result = await queue.get(name);\n\t\t\t\treturn {alpnProtocol: result.alpnProtocol};\n\t\t\t}\n\n\t\t\tconst {path} = options;\n\t\t\toptions.path = options.socketPath;\n\n\t\t\tconst resultPromise = resolveALPN(options, connect);\n\t\t\tqueue.set(name, resultPromise);\n\n\t\t\ttry {\n\t\t\t\tconst result = await resultPromise;\n\n\t\t\t\tcache.set(name, result.alpnProtocol);\n\t\t\t\tqueue.delete(name);\n\n\t\t\t\toptions.path = path;\n\n\t\t\t\treturn result;\n\t\t\t} catch (error) {\n\t\t\t\tqueue.delete(name);\n\n\t\t\t\toptions.path = path;\n\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn {alpnProtocol: cache.get(name)};\n\t};\n};\n\nconst defaultResolveProtocol = createResolveProtocol(cache, queue);\n\nmodule.exports = async (input, options, callback) => {\n\tif (typeof input === 'string') {\n\t\tinput = urlToHttpOptions(new URL(input));\n\t} else if (input instanceof URL) {\n\t\tinput = urlToHttpOptions(input);\n\t} else {\n\t\tinput = {...input};\n\t}\n\n\tif (typeof options === 'function' || options === undefined) {\n\t\t// (options, callback)\n\t\tcallback = options;\n\t\toptions = input;\n\t} else {\n\t\t// (input, options, callback)\n\t\toptions = Object.assign(input, options);\n\t}\n\n\toptions.ALPNProtocols = options.ALPNProtocols || ['h2', 'http/1.1'];\n\n\tif (!Array.isArray(options.ALPNProtocols) || options.ALPNProtocols.length === 0) {\n\t\tthrow new Error('The `ALPNProtocols` option must be an Array with at least one entry');\n\t}\n\n\toptions.protocol = options.protocol || 'https:';\n\tconst isHttps = options.protocol === 'https:';\n\n\toptions.host = options.hostname || options.host || 'localhost';\n\toptions.session = options.tlsSession;\n\toptions.servername = options.servername || calculateServerName((options.headers && options.headers.host) || options.host);\n\toptions.port = options.port || (isHttps ? 443 : 80);\n\toptions._defaultAgent = isHttps ? https.globalAgent : http.globalAgent;\n\n\tconst resolveProtocol = options.resolveProtocol || defaultResolveProtocol;\n\n\t// Note: We don't support `h2session` here\n\n\tlet {agent} = options;\n\tif (agent !== undefined && agent !== false && agent.constructor.name !== 'Object') {\n\t\tthrow new Error('The `options.agent` can be only an object `http`, `https` or `http2` properties');\n\t}\n\n\tif (isHttps) {\n\t\toptions.resolveSocket = true;\n\n\t\tlet {socket, alpnProtocol, timeout} = await resolveProtocol(options);\n\n\t\tif (timeout) {\n\t\t\tif (socket) {\n\t\t\t\tsocket.destroy();\n\t\t\t}\n\n\t\t\tconst error = new Error(`Timed out resolving ALPN: ${options.timeout} ms`);\n\t\t\terror.code = 'ETIMEDOUT';\n\t\t\terror.ms = options.timeout;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\t// We can't accept custom `createConnection` because the API is different for HTTP/2\n\t\tif (socket && options.createConnection) {\n\t\t\tsocket.destroy();\n\t\t\tsocket = undefined;\n\t\t}\n\n\t\tdelete options.resolveSocket;\n\n\t\tconst isHttp2 = alpnProtocol === 'h2';\n\n\t\tif (agent) {\n\t\t\tagent = isHttp2 ? agent.http2 : agent.https;\n\t\t\toptions.agent = agent;\n\t\t}\n\n\t\tif (agent === undefined) {\n\t\t\tagent = isHttp2 ? globalAgent : https.globalAgent;\n\t\t}\n\n\t\tif (socket) {\n\t\t\tif (agent === false) {\n\t\t\t\tsocket.destroy();\n\t\t\t} else {\n\t\t\t\tconst defaultCreateConnection = (isHttp2 ? Agent : https.Agent).prototype.createConnection;\n\n\t\t\t\tif (agent.createConnection === defaultCreateConnection) {\n\t\t\t\t\tif (isHttp2) {\n\t\t\t\t\t\toptions._reuseSocket = socket;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinstallSocket(agent, socket, options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsocket.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isHttp2) {\n\t\t\treturn delayAsyncDestroy(new Http2ClientRequest(options, callback));\n\t\t}\n\t} else if (agent) {\n\t\toptions.agent = agent.http;\n\t}\n\n\t// If we're sending HTTP/1.1, handle any explicitly set H2 headers in the options:\n\tif (options.headers) {\n\t\toptions.headers = {...options.headers};\n\n\t\t// :authority is equivalent to the HTTP/1.1 host header\n\t\tif (options.headers[':authority']) {\n\t\t\tif (!options.headers.host) {\n\t\t\t\toptions.headers.host = options.headers[':authority'];\n\t\t\t}\n\n\t\t\tdelete options.headers[':authority'];\n\t\t}\n\n\t\t// Remove other HTTP/2 headers as they have their counterparts in the options\n\t\tdelete options.headers[':method'];\n\t\tdelete options.headers[':scheme'];\n\t\tdelete options.headers[':path'];\n\t}\n\n\treturn delayAsyncDestroy(http.request(options, callback));\n};\n\nmodule.exports.protocolCache = cache;\nmodule.exports.resolveProtocol = defaultResolveProtocol;\nmodule.exports.createResolveProtocol = createResolveProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/auto.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/client-request.js":
/*!*************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/client-request.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// See https://github.com/facebook/jest/issues/2549\n// eslint-disable-next-line node/prefer-global/url\nconst {URL, urlToHttpOptions} = __webpack_require__(/*! url */ \"url\");\nconst http2 = __webpack_require__(/*! http2 */ \"http2\");\nconst {Writable} = __webpack_require__(/*! stream */ \"stream\");\nconst {Agent, globalAgent} = __webpack_require__(/*! ./agent.js */ \"(rsc)/./node_modules/http2-wrapper/source/agent.js\");\nconst IncomingMessage = __webpack_require__(/*! ./incoming-message.js */ \"(rsc)/./node_modules/http2-wrapper/source/incoming-message.js\");\nconst proxyEvents = __webpack_require__(/*! ./utils/proxy-events.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/proxy-events.js\");\nconst {\n\tERR_INVALID_ARG_TYPE,\n\tERR_INVALID_PROTOCOL,\n\tERR_HTTP_HEADERS_SENT\n} = __webpack_require__(/*! ./utils/errors.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/errors.js\");\nconst validateHeaderName = __webpack_require__(/*! ./utils/validate-header-name.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/validate-header-name.js\");\nconst validateHeaderValue = __webpack_require__(/*! ./utils/validate-header-value.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/validate-header-value.js\");\nconst proxySocketHandler = __webpack_require__(/*! ./utils/proxy-socket-handler.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/proxy-socket-handler.js\");\n\nconst {\n\tHTTP2_HEADER_STATUS,\n\tHTTP2_HEADER_METHOD,\n\tHTTP2_HEADER_PATH,\n\tHTTP2_HEADER_AUTHORITY,\n\tHTTP2_METHOD_CONNECT\n} = http2.constants;\n\nconst kHeaders = Symbol('headers');\nconst kOrigin = Symbol('origin');\nconst kSession = Symbol('session');\nconst kOptions = Symbol('options');\nconst kFlushedHeaders = Symbol('flushedHeaders');\nconst kJobs = Symbol('jobs');\nconst kPendingAgentPromise = Symbol('pendingAgentPromise');\n\nclass ClientRequest extends Writable {\n\tconstructor(input, options, callback) {\n\t\tsuper({\n\t\t\tautoDestroy: false,\n\t\t\temitClose: false\n\t\t});\n\n\t\tif (typeof input === 'string') {\n\t\t\tinput = urlToHttpOptions(new URL(input));\n\t\t} else if (input instanceof URL) {\n\t\t\tinput = urlToHttpOptions(input);\n\t\t} else {\n\t\t\tinput = {...input};\n\t\t}\n\n\t\tif (typeof options === 'function' || options === undefined) {\n\t\t\t// (options, callback)\n\t\t\tcallback = options;\n\t\t\toptions = input;\n\t\t} else {\n\t\t\t// (input, options, callback)\n\t\t\toptions = Object.assign(input, options);\n\t\t}\n\n\t\tif (options.h2session) {\n\t\t\tthis[kSession] = options.h2session;\n\n\t\t\tif (this[kSession].destroyed) {\n\t\t\t\tthrow new Error('The session has been closed already');\n\t\t\t}\n\n\t\t\tthis.protocol = this[kSession].socket.encrypted ? 'https:' : 'http:';\n\t\t} else if (options.agent === false) {\n\t\t\tthis.agent = new Agent({maxEmptySessions: 0});\n\t\t} else if (typeof options.agent === 'undefined' || options.agent === null) {\n\t\t\tthis.agent = globalAgent;\n\t\t} else if (typeof options.agent.request === 'function') {\n\t\t\tthis.agent = options.agent;\n\t\t} else {\n\t\t\tthrow new ERR_INVALID_ARG_TYPE('options.agent', ['http2wrapper.Agent-like Object', 'undefined', 'false'], options.agent);\n\t\t}\n\n\t\tif (this.agent) {\n\t\t\tthis.protocol = this.agent.protocol;\n\t\t}\n\n\t\tif (options.protocol && options.protocol !== this.protocol) {\n\t\t\tthrow new ERR_INVALID_PROTOCOL(options.protocol, this.protocol);\n\t\t}\n\n\t\tif (!options.port) {\n\t\t\toptions.port = options.defaultPort || (this.agent && this.agent.defaultPort) || 443;\n\t\t}\n\n\t\toptions.host = options.hostname || options.host || 'localhost';\n\n\t\t// Unused\n\t\tdelete options.hostname;\n\n\t\tconst {timeout} = options;\n\t\toptions.timeout = undefined;\n\n\t\tthis[kHeaders] = Object.create(null);\n\t\tthis[kJobs] = [];\n\n\t\tthis[kPendingAgentPromise] = undefined;\n\n\t\tthis.socket = null;\n\t\tthis.connection = null;\n\n\t\tthis.method = options.method || 'GET';\n\n\t\tif (!(this.method === 'CONNECT' && (options.path === '/' || options.path === undefined))) {\n\t\t\tthis.path = options.path;\n\t\t}\n\n\t\tthis.res = null;\n\t\tthis.aborted = false;\n\t\tthis.reusedSocket = false;\n\n\t\tconst {headers} = options;\n\t\tif (headers) {\n\t\t\t// eslint-disable-next-line guard-for-in\n\t\t\tfor (const header in headers) {\n\t\t\t\tthis.setHeader(header, headers[header]);\n\t\t\t}\n\t\t}\n\n\t\tif (options.auth && !('authorization' in this[kHeaders])) {\n\t\t\tthis[kHeaders].authorization = 'Basic ' + Buffer.from(options.auth).toString('base64');\n\t\t}\n\n\t\toptions.session = options.tlsSession;\n\t\toptions.path = options.socketPath;\n\n\t\tthis[kOptions] = options;\n\n\t\t// Clients that generate HTTP/2 requests directly SHOULD use the :authority pseudo-header field instead of the Host header field.\n\t\tthis[kOrigin] = new URL(`${this.protocol}//${options.servername || options.host}:${options.port}`);\n\n\t\t// A socket is being reused\n\t\tconst reuseSocket = options._reuseSocket;\n\t\tif (reuseSocket) {\n\t\t\toptions.createConnection = (...args) => {\n\t\t\t\tif (reuseSocket.destroyed) {\n\t\t\t\t\treturn this.agent.createConnection(...args);\n\t\t\t\t}\n\n\t\t\t\treturn reuseSocket;\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\t\tthis.agent.getSession(this[kOrigin], this[kOptions]).catch(() => {});\n\t\t}\n\n\t\tif (timeout) {\n\t\t\tthis.setTimeout(timeout);\n\t\t}\n\n\t\tif (callback) {\n\t\t\tthis.once('response', callback);\n\t\t}\n\n\t\tthis[kFlushedHeaders] = false;\n\t}\n\n\tget method() {\n\t\treturn this[kHeaders][HTTP2_HEADER_METHOD];\n\t}\n\n\tset method(value) {\n\t\tif (value) {\n\t\t\tthis[kHeaders][HTTP2_HEADER_METHOD] = value.toUpperCase();\n\t\t}\n\t}\n\n\tget path() {\n\t\tconst header = this.method === 'CONNECT' ? HTTP2_HEADER_AUTHORITY : HTTP2_HEADER_PATH;\n\n\t\treturn this[kHeaders][header];\n\t}\n\n\tset path(value) {\n\t\tif (value) {\n\t\t\tconst header = this.method === 'CONNECT' ? HTTP2_HEADER_AUTHORITY : HTTP2_HEADER_PATH;\n\n\t\t\tthis[kHeaders][header] = value;\n\t\t}\n\t}\n\n\tget host() {\n\t\treturn this[kOrigin].hostname;\n\t}\n\n\tset host(_value) {\n\t\t// Do nothing as this is read only.\n\t}\n\n\tget _mustNotHaveABody() {\n\t\treturn this.method === 'GET' || this.method === 'HEAD' || this.method === 'DELETE';\n\t}\n\n\t_write(chunk, encoding, callback) {\n\t\t// https://github.com/nodejs/node/blob/654df09ae0c5e17d1b52a900a545f0664d8c7627/lib/internal/http2/util.js#L148-L156\n\t\tif (this._mustNotHaveABody) {\n\t\t\tcallback(new Error('The GET, HEAD and DELETE methods must NOT have a body'));\n\t\t\t/* istanbul ignore next: Node.js 12 throws directly */\n\t\t\treturn;\n\t\t}\n\n\t\tthis.flushHeaders();\n\n\t\tconst callWrite = () => this._request.write(chunk, encoding, callback);\n\t\tif (this._request) {\n\t\t\tcallWrite();\n\t\t} else {\n\t\t\tthis[kJobs].push(callWrite);\n\t\t}\n\t}\n\n\t_final(callback) {\n\t\tthis.flushHeaders();\n\n\t\tconst callEnd = () => {\n\t\t\t// For GET, HEAD and DELETE and CONNECT\n\t\t\tif (this._mustNotHaveABody || this.method === 'CONNECT') {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._request.end(callback);\n\t\t};\n\n\t\tif (this._request) {\n\t\t\tcallEnd();\n\t\t} else {\n\t\t\tthis[kJobs].push(callEnd);\n\t\t}\n\t}\n\n\tabort() {\n\t\tif (this.res && this.res.complete) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.aborted) {\n\t\t\tprocess.nextTick(() => this.emit('abort'));\n\t\t}\n\n\t\tthis.aborted = true;\n\n\t\tthis.destroy();\n\t}\n\n\tasync _destroy(error, callback) {\n\t\tif (this.res) {\n\t\t\tthis.res._dump();\n\t\t}\n\n\t\tif (this._request) {\n\t\t\tthis._request.destroy();\n\t\t} else {\n\t\t\tprocess.nextTick(() => {\n\t\t\t\tthis.emit('close');\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tawait this[kPendingAgentPromise];\n\t\t} catch (internalError) {\n\t\t\tif (this.aborted) {\n\t\t\t\terror = internalError;\n\t\t\t}\n\t\t}\n\n\t\tcallback(error);\n\t}\n\n\tasync flushHeaders() {\n\t\tif (this[kFlushedHeaders] || this.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis[kFlushedHeaders] = true;\n\n\t\tconst isConnectMethod = this.method === HTTP2_METHOD_CONNECT;\n\n\t\t// The real magic is here\n\t\tconst onStream = stream => {\n\t\t\tthis._request = stream;\n\n\t\t\tif (this.destroyed) {\n\t\t\t\tstream.destroy();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Forwards `timeout`, `continue`, `close` and `error` events to this instance.\n\t\t\tif (!isConnectMethod) {\n\t\t\t\t// TODO: Should we proxy `close` here?\n\t\t\t\tproxyEvents(stream, this, ['timeout', 'continue']);\n\t\t\t}\n\n\t\t\tstream.once('error', error => {\n\t\t\t\tthis.destroy(error);\n\t\t\t});\n\n\t\t\tstream.once('aborted', () => {\n\t\t\t\tconst {res} = this;\n\t\t\t\tif (res) {\n\t\t\t\t\tres.aborted = true;\n\t\t\t\t\tres.emit('aborted');\n\t\t\t\t\tres.destroy();\n\t\t\t\t} else {\n\t\t\t\t\tthis.destroy(new Error('The server aborted the HTTP/2 stream'));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst onResponse = (headers, flags, rawHeaders) => {\n\t\t\t\t// If we were to emit raw request stream, it would be as fast as the native approach.\n\t\t\t\t// Note that wrapping the raw stream in a Proxy instance won't improve the performance (already tested it).\n\t\t\t\tconst response = new IncomingMessage(this.socket, stream.readableHighWaterMark);\n\t\t\t\tthis.res = response;\n\n\t\t\t\t// Undocumented, but it is used by `cacheable-request`\n\t\t\t\tresponse.url = `${this[kOrigin].origin}${this.path}`;\n\n\t\t\t\tresponse.req = this;\n\t\t\t\tresponse.statusCode = headers[HTTP2_HEADER_STATUS];\n\t\t\t\tresponse.headers = headers;\n\t\t\t\tresponse.rawHeaders = rawHeaders;\n\n\t\t\t\tresponse.once('end', () => {\n\t\t\t\t\tresponse.complete = true;\n\n\t\t\t\t\t// Has no effect, just be consistent with the Node.js behavior\n\t\t\t\t\tresponse.socket = null;\n\t\t\t\t\tresponse.connection = null;\n\t\t\t\t});\n\n\t\t\t\tif (isConnectMethod) {\n\t\t\t\t\tresponse.upgrade = true;\n\n\t\t\t\t\t// The HTTP1 API says the socket is detached here,\n\t\t\t\t\t// but we can't do that so we pass the original HTTP2 request.\n\t\t\t\t\tif (this.emit('connect', response, stream, Buffer.alloc(0))) {\n\t\t\t\t\t\tthis.emit('close');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// No listeners attached, destroy the original request.\n\t\t\t\t\t\tstream.destroy();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Forwards data\n\t\t\t\t\tstream.on('data', chunk => {\n\t\t\t\t\t\tif (!response._dumped && !response.push(chunk)) {\n\t\t\t\t\t\t\tstream.pause();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tstream.once('end', () => {\n\t\t\t\t\t\tif (!this.aborted) {\n\t\t\t\t\t\t\tresponse.push(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!this.emit('response', response)) {\n\t\t\t\t\t\t// No listeners attached, dump the response.\n\t\t\t\t\t\tresponse._dump();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// This event tells we are ready to listen for the data.\n\t\t\tstream.once('response', onResponse);\n\n\t\t\t// Emits `information` event\n\t\t\tstream.once('headers', headers => this.emit('information', {statusCode: headers[HTTP2_HEADER_STATUS]}));\n\n\t\t\tstream.once('trailers', (trailers, flags, rawTrailers) => {\n\t\t\t\tconst {res} = this;\n\n\t\t\t\t// https://github.com/nodejs/node/issues/41251\n\t\t\t\tif (res === null) {\n\t\t\t\t\tonResponse(trailers, flags, rawTrailers);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Assigns trailers to the response object.\n\t\t\t\tres.trailers = trailers;\n\t\t\t\tres.rawTrailers = rawTrailers;\n\t\t\t});\n\n\t\t\tstream.once('close', () => {\n\t\t\t\tconst {aborted, res} = this;\n\t\t\t\tif (res) {\n\t\t\t\t\tif (aborted) {\n\t\t\t\t\t\tres.aborted = true;\n\t\t\t\t\t\tres.emit('aborted');\n\t\t\t\t\t\tres.destroy();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst finish = () => {\n\t\t\t\t\t\tres.emit('close');\n\n\t\t\t\t\t\tthis.destroy();\n\t\t\t\t\t\tthis.emit('close');\n\t\t\t\t\t};\n\n\t\t\t\t\tif (res.readable) {\n\t\t\t\t\t\tres.once('end', finish);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.destroyed) {\n\t\t\t\t\tthis.destroy(new Error('The HTTP/2 stream has been early terminated'));\n\t\t\t\t\tthis.emit('close');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.destroy();\n\t\t\t\tthis.emit('close');\n\t\t\t});\n\n\t\t\tthis.socket = new Proxy(stream, proxySocketHandler);\n\n\t\t\tfor (const job of this[kJobs]) {\n\t\t\t\tjob();\n\t\t\t}\n\n\t\t\tthis[kJobs].length = 0;\n\n\t\t\tthis.emit('socket', this.socket);\n\t\t};\n\n\t\tif (!(HTTP2_HEADER_AUTHORITY in this[kHeaders]) && !isConnectMethod) {\n\t\t\tthis[kHeaders][HTTP2_HEADER_AUTHORITY] = this[kOrigin].host;\n\t\t}\n\n\t\t// Makes a HTTP2 request\n\t\tif (this[kSession]) {\n\t\t\ttry {\n\t\t\t\tonStream(this[kSession].request(this[kHeaders]));\n\t\t\t} catch (error) {\n\t\t\t\tthis.destroy(error);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.reusedSocket = true;\n\n\t\t\ttry {\n\t\t\t\tconst promise = this.agent.request(this[kOrigin], this[kOptions], this[kHeaders]);\n\t\t\t\tthis[kPendingAgentPromise] = promise;\n\n\t\t\t\tonStream(await promise);\n\n\t\t\t\tthis[kPendingAgentPromise] = false;\n\t\t\t} catch (error) {\n\t\t\t\tthis[kPendingAgentPromise] = false;\n\n\t\t\t\tthis.destroy(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tget connection() {\n\t\treturn this.socket;\n\t}\n\n\tset connection(value) {\n\t\tthis.socket = value;\n\t}\n\n\tgetHeaderNames() {\n\t\treturn Object.keys(this[kHeaders]);\n\t}\n\n\thasHeader(name) {\n\t\tif (typeof name !== 'string') {\n\t\t\tthrow new ERR_INVALID_ARG_TYPE('name', 'string', name);\n\t\t}\n\n\t\treturn Boolean(this[kHeaders][name.toLowerCase()]);\n\t}\n\n\tgetHeader(name) {\n\t\tif (typeof name !== 'string') {\n\t\t\tthrow new ERR_INVALID_ARG_TYPE('name', 'string', name);\n\t\t}\n\n\t\treturn this[kHeaders][name.toLowerCase()];\n\t}\n\n\tget headersSent() {\n\t\treturn this[kFlushedHeaders];\n\t}\n\n\tremoveHeader(name) {\n\t\tif (typeof name !== 'string') {\n\t\t\tthrow new ERR_INVALID_ARG_TYPE('name', 'string', name);\n\t\t}\n\n\t\tif (this.headersSent) {\n\t\t\tthrow new ERR_HTTP_HEADERS_SENT('remove');\n\t\t}\n\n\t\tdelete this[kHeaders][name.toLowerCase()];\n\t}\n\n\tsetHeader(name, value) {\n\t\tif (this.headersSent) {\n\t\t\tthrow new ERR_HTTP_HEADERS_SENT('set');\n\t\t}\n\n\t\tvalidateHeaderName(name);\n\t\tvalidateHeaderValue(name, value);\n\n\t\tconst lowercased = name.toLowerCase();\n\n\t\tif (lowercased === 'connection') {\n\t\t\tif (value.toLowerCase() === 'keep-alive') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthrow new Error(`Invalid 'connection' header: ${value}`);\n\t\t}\n\n\t\tif (lowercased === 'host' && this.method === 'CONNECT') {\n\t\t\tthis[kHeaders][HTTP2_HEADER_AUTHORITY] = value;\n\t\t} else {\n\t\t\tthis[kHeaders][lowercased] = value;\n\t\t}\n\t}\n\n\tsetNoDelay() {\n\t\t// HTTP2 sockets cannot be malformed, do nothing.\n\t}\n\n\tsetSocketKeepAlive() {\n\t\t// HTTP2 sockets cannot be malformed, do nothing.\n\t}\n\n\tsetTimeout(ms, callback) {\n\t\tconst applyTimeout = () => this._request.setTimeout(ms, callback);\n\n\t\tif (this._request) {\n\t\t\tapplyTimeout();\n\t\t} else {\n\t\t\tthis[kJobs].push(applyTimeout);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tget maxHeadersCount() {\n\t\tif (!this.destroyed && this._request) {\n\t\t\treturn this._request.session.localSettings.maxHeaderListSize;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tset maxHeadersCount(_value) {\n\t\t// Updating HTTP2 settings would affect all requests, do nothing.\n\t}\n}\n\nmodule.exports = ClientRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvY2xpZW50LXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsT0FBTyx1QkFBdUIsRUFBRSxtQkFBTyxDQUFDLGdCQUFLO0FBQzdDLGNBQWMsbUJBQU8sQ0FBQyxvQkFBTztBQUM3QixPQUFPLFVBQVUsRUFBRSxtQkFBTyxDQUFDLHNCQUFRO0FBQ25DLE9BQU8sb0JBQW9CLEVBQUUsbUJBQU8sQ0FBQyxzRUFBWTtBQUNqRCx3QkFBd0IsbUJBQU8sQ0FBQyw0RkFBdUI7QUFDdkQsb0JBQW9CLG1CQUFPLENBQUMsZ0dBQXlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsb0ZBQW1CO0FBQy9CLDJCQUEyQixtQkFBTyxDQUFDLGdIQUFpQztBQUNwRSw0QkFBNEIsbUJBQU8sQ0FBQyxrSEFBa0M7QUFDdEUsMkJBQTJCLG1CQUFPLENBQUMsZ0hBQWlDOztBQUVwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0osWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLElBQUk7QUFDSiwyQkFBMkIsb0JBQW9CO0FBQy9DLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsU0FBUyxTQUFTO0FBQ2xCOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFNBQVMsU0FBUztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSw2QkFBNkIsY0FBYyxJQUFJLG1DQUFtQyxHQUFHLGFBQWE7O0FBRWxHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxzRUFBc0U7QUFDdEU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzQkFBc0IscUJBQXFCLEVBQUUsVUFBVTs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNOztBQUVOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7QUFFTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLCtEQUErRCx5Q0FBeUM7O0FBRXhHO0FBQ0EsV0FBVyxLQUFLOztBQUVoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7QUFDQSxXQUFXLGNBQWM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7O0FBRUo7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtREFBbUQsTUFBTTtBQUN6RDs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RuZm0tYm90Ly4vbm9kZV9tb2R1bGVzL2h0dHAyLXdyYXBwZXIvc291cmNlL2NsaWVudC1yZXF1ZXN0LmpzP2UzNzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9qZXN0L2lzc3Vlcy8yNTQ5XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm9kZS9wcmVmZXItZ2xvYmFsL3VybFxuY29uc3Qge1VSTCwgdXJsVG9IdHRwT3B0aW9uc30gPSByZXF1aXJlKCd1cmwnKTtcbmNvbnN0IGh0dHAyID0gcmVxdWlyZSgnaHR0cDInKTtcbmNvbnN0IHtXcml0YWJsZX0gPSByZXF1aXJlKCdzdHJlYW0nKTtcbmNvbnN0IHtBZ2VudCwgZ2xvYmFsQWdlbnR9ID0gcmVxdWlyZSgnLi9hZ2VudC5qcycpO1xuY29uc3QgSW5jb21pbmdNZXNzYWdlID0gcmVxdWlyZSgnLi9pbmNvbWluZy1tZXNzYWdlLmpzJyk7XG5jb25zdCBwcm94eUV2ZW50cyA9IHJlcXVpcmUoJy4vdXRpbHMvcHJveHktZXZlbnRzLmpzJyk7XG5jb25zdCB7XG5cdEVSUl9JTlZBTElEX0FSR19UWVBFLFxuXHRFUlJfSU5WQUxJRF9QUk9UT0NPTCxcblx0RVJSX0hUVFBfSEVBREVSU19TRU5UXG59ID0gcmVxdWlyZSgnLi91dGlscy9lcnJvcnMuanMnKTtcbmNvbnN0IHZhbGlkYXRlSGVhZGVyTmFtZSA9IHJlcXVpcmUoJy4vdXRpbHMvdmFsaWRhdGUtaGVhZGVyLW5hbWUuanMnKTtcbmNvbnN0IHZhbGlkYXRlSGVhZGVyVmFsdWUgPSByZXF1aXJlKCcuL3V0aWxzL3ZhbGlkYXRlLWhlYWRlci12YWx1ZS5qcycpO1xuY29uc3QgcHJveHlTb2NrZXRIYW5kbGVyID0gcmVxdWlyZSgnLi91dGlscy9wcm94eS1zb2NrZXQtaGFuZGxlci5qcycpO1xuXG5jb25zdCB7XG5cdEhUVFAyX0hFQURFUl9TVEFUVVMsXG5cdEhUVFAyX0hFQURFUl9NRVRIT0QsXG5cdEhUVFAyX0hFQURFUl9QQVRILFxuXHRIVFRQMl9IRUFERVJfQVVUSE9SSVRZLFxuXHRIVFRQMl9NRVRIT0RfQ09OTkVDVFxufSA9IGh0dHAyLmNvbnN0YW50cztcblxuY29uc3Qga0hlYWRlcnMgPSBTeW1ib2woJ2hlYWRlcnMnKTtcbmNvbnN0IGtPcmlnaW4gPSBTeW1ib2woJ29yaWdpbicpO1xuY29uc3Qga1Nlc3Npb24gPSBTeW1ib2woJ3Nlc3Npb24nKTtcbmNvbnN0IGtPcHRpb25zID0gU3ltYm9sKCdvcHRpb25zJyk7XG5jb25zdCBrRmx1c2hlZEhlYWRlcnMgPSBTeW1ib2woJ2ZsdXNoZWRIZWFkZXJzJyk7XG5jb25zdCBrSm9icyA9IFN5bWJvbCgnam9icycpO1xuY29uc3Qga1BlbmRpbmdBZ2VudFByb21pc2UgPSBTeW1ib2woJ3BlbmRpbmdBZ2VudFByb21pc2UnKTtcblxuY2xhc3MgQ2xpZW50UmVxdWVzdCBleHRlbmRzIFdyaXRhYmxlIHtcblx0Y29uc3RydWN0b3IoaW5wdXQsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG5cdFx0c3VwZXIoe1xuXHRcdFx0YXV0b0Rlc3Ryb3k6IGZhbHNlLFxuXHRcdFx0ZW1pdENsb3NlOiBmYWxzZVxuXHRcdH0pO1xuXG5cdFx0aWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpIHtcblx0XHRcdGlucHV0ID0gdXJsVG9IdHRwT3B0aW9ucyhuZXcgVVJMKGlucHV0KSk7XG5cdFx0fSBlbHNlIGlmIChpbnB1dCBpbnN0YW5jZW9mIFVSTCkge1xuXHRcdFx0aW5wdXQgPSB1cmxUb0h0dHBPcHRpb25zKGlucHV0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0aW5wdXQgPSB7Li4uaW5wdXR9O1xuXHRcdH1cblxuXHRcdGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJyB8fCBvcHRpb25zID09PSB1bmRlZmluZWQpIHtcblx0XHRcdC8vIChvcHRpb25zLCBjYWxsYmFjaylcblx0XHRcdGNhbGxiYWNrID0gb3B0aW9ucztcblx0XHRcdG9wdGlvbnMgPSBpbnB1dDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gKGlucHV0LCBvcHRpb25zLCBjYWxsYmFjaylcblx0XHRcdG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKGlucHV0LCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRpZiAob3B0aW9ucy5oMnNlc3Npb24pIHtcblx0XHRcdHRoaXNba1Nlc3Npb25dID0gb3B0aW9ucy5oMnNlc3Npb247XG5cblx0XHRcdGlmICh0aGlzW2tTZXNzaW9uXS5kZXN0cm95ZWQpIHtcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdUaGUgc2Vzc2lvbiBoYXMgYmVlbiBjbG9zZWQgYWxyZWFkeScpO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLnByb3RvY29sID0gdGhpc1trU2Vzc2lvbl0uc29ja2V0LmVuY3J5cHRlZCA/ICdodHRwczonIDogJ2h0dHA6Jztcblx0XHR9IGVsc2UgaWYgKG9wdGlvbnMuYWdlbnQgPT09IGZhbHNlKSB7XG5cdFx0XHR0aGlzLmFnZW50ID0gbmV3IEFnZW50KHttYXhFbXB0eVNlc3Npb25zOiAwfSk7XG5cdFx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5hZ2VudCA9PT0gJ3VuZGVmaW5lZCcgfHwgb3B0aW9ucy5hZ2VudCA9PT0gbnVsbCkge1xuXHRcdFx0dGhpcy5hZ2VudCA9IGdsb2JhbEFnZW50O1xuXHRcdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuYWdlbnQucmVxdWVzdCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dGhpcy5hZ2VudCA9IG9wdGlvbnMuYWdlbnQ7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRocm93IG5ldyBFUlJfSU5WQUxJRF9BUkdfVFlQRSgnb3B0aW9ucy5hZ2VudCcsIFsnaHR0cDJ3cmFwcGVyLkFnZW50LWxpa2UgT2JqZWN0JywgJ3VuZGVmaW5lZCcsICdmYWxzZSddLCBvcHRpb25zLmFnZW50KTtcblx0XHR9XG5cblx0XHRpZiAodGhpcy5hZ2VudCkge1xuXHRcdFx0dGhpcy5wcm90b2NvbCA9IHRoaXMuYWdlbnQucHJvdG9jb2w7XG5cdFx0fVxuXG5cdFx0aWYgKG9wdGlvbnMucHJvdG9jb2wgJiYgb3B0aW9ucy5wcm90b2NvbCAhPT0gdGhpcy5wcm90b2NvbCkge1xuXHRcdFx0dGhyb3cgbmV3IEVSUl9JTlZBTElEX1BST1RPQ09MKG9wdGlvbnMucHJvdG9jb2wsIHRoaXMucHJvdG9jb2wpO1xuXHRcdH1cblxuXHRcdGlmICghb3B0aW9ucy5wb3J0KSB7XG5cdFx0XHRvcHRpb25zLnBvcnQgPSBvcHRpb25zLmRlZmF1bHRQb3J0IHx8ICh0aGlzLmFnZW50ICYmIHRoaXMuYWdlbnQuZGVmYXVsdFBvcnQpIHx8IDQ0Mztcblx0XHR9XG5cblx0XHRvcHRpb25zLmhvc3QgPSBvcHRpb25zLmhvc3RuYW1lIHx8IG9wdGlvbnMuaG9zdCB8fCAnbG9jYWxob3N0JztcblxuXHRcdC8vIFVudXNlZFxuXHRcdGRlbGV0ZSBvcHRpb25zLmhvc3RuYW1lO1xuXG5cdFx0Y29uc3Qge3RpbWVvdXR9ID0gb3B0aW9ucztcblx0XHRvcHRpb25zLnRpbWVvdXQgPSB1bmRlZmluZWQ7XG5cblx0XHR0aGlzW2tIZWFkZXJzXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cdFx0dGhpc1trSm9ic10gPSBbXTtcblxuXHRcdHRoaXNba1BlbmRpbmdBZ2VudFByb21pc2VdID0gdW5kZWZpbmVkO1xuXG5cdFx0dGhpcy5zb2NrZXQgPSBudWxsO1xuXHRcdHRoaXMuY29ubmVjdGlvbiA9IG51bGw7XG5cblx0XHR0aGlzLm1ldGhvZCA9IG9wdGlvbnMubWV0aG9kIHx8ICdHRVQnO1xuXG5cdFx0aWYgKCEodGhpcy5tZXRob2QgPT09ICdDT05ORUNUJyAmJiAob3B0aW9ucy5wYXRoID09PSAnLycgfHwgb3B0aW9ucy5wYXRoID09PSB1bmRlZmluZWQpKSkge1xuXHRcdFx0dGhpcy5wYXRoID0gb3B0aW9ucy5wYXRoO1xuXHRcdH1cblxuXHRcdHRoaXMucmVzID0gbnVsbDtcblx0XHR0aGlzLmFib3J0ZWQgPSBmYWxzZTtcblx0XHR0aGlzLnJldXNlZFNvY2tldCA9IGZhbHNlO1xuXG5cdFx0Y29uc3Qge2hlYWRlcnN9ID0gb3B0aW9ucztcblx0XHRpZiAoaGVhZGVycykge1xuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGd1YXJkLWZvci1pblxuXHRcdFx0Zm9yIChjb25zdCBoZWFkZXIgaW4gaGVhZGVycykge1xuXHRcdFx0XHR0aGlzLnNldEhlYWRlcihoZWFkZXIsIGhlYWRlcnNbaGVhZGVyXSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKG9wdGlvbnMuYXV0aCAmJiAhKCdhdXRob3JpemF0aW9uJyBpbiB0aGlzW2tIZWFkZXJzXSkpIHtcblx0XHRcdHRoaXNba0hlYWRlcnNdLmF1dGhvcml6YXRpb24gPSAnQmFzaWMgJyArIEJ1ZmZlci5mcm9tKG9wdGlvbnMuYXV0aCkudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuXHRcdH1cblxuXHRcdG9wdGlvbnMuc2Vzc2lvbiA9IG9wdGlvbnMudGxzU2Vzc2lvbjtcblx0XHRvcHRpb25zLnBhdGggPSBvcHRpb25zLnNvY2tldFBhdGg7XG5cblx0XHR0aGlzW2tPcHRpb25zXSA9IG9wdGlvbnM7XG5cblx0XHQvLyBDbGllbnRzIHRoYXQgZ2VuZXJhdGUgSFRUUC8yIHJlcXVlc3RzIGRpcmVjdGx5IFNIT1VMRCB1c2UgdGhlIDphdXRob3JpdHkgcHNldWRvLWhlYWRlciBmaWVsZCBpbnN0ZWFkIG9mIHRoZSBIb3N0IGhlYWRlciBmaWVsZC5cblx0XHR0aGlzW2tPcmlnaW5dID0gbmV3IFVSTChgJHt0aGlzLnByb3RvY29sfS8vJHtvcHRpb25zLnNlcnZlcm5hbWUgfHwgb3B0aW9ucy5ob3N0fToke29wdGlvbnMucG9ydH1gKTtcblxuXHRcdC8vIEEgc29ja2V0IGlzIGJlaW5nIHJldXNlZFxuXHRcdGNvbnN0IHJldXNlU29ja2V0ID0gb3B0aW9ucy5fcmV1c2VTb2NrZXQ7XG5cdFx0aWYgKHJldXNlU29ja2V0KSB7XG5cdFx0XHRvcHRpb25zLmNyZWF0ZUNvbm5lY3Rpb24gPSAoLi4uYXJncykgPT4ge1xuXHRcdFx0XHRpZiAocmV1c2VTb2NrZXQuZGVzdHJveWVkKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMuYWdlbnQuY3JlYXRlQ29ubmVjdGlvbiguLi5hcmdzKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiByZXVzZVNvY2tldDtcblx0XHRcdH07XG5cblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcm9taXNlL3ByZWZlci1hd2FpdC10by10aGVuXG5cdFx0XHR0aGlzLmFnZW50LmdldFNlc3Npb24odGhpc1trT3JpZ2luXSwgdGhpc1trT3B0aW9uc10pLmNhdGNoKCgpID0+IHt9KTtcblx0XHR9XG5cblx0XHRpZiAodGltZW91dCkge1xuXHRcdFx0dGhpcy5zZXRUaW1lb3V0KHRpbWVvdXQpO1xuXHRcdH1cblxuXHRcdGlmIChjYWxsYmFjaykge1xuXHRcdFx0dGhpcy5vbmNlKCdyZXNwb25zZScsIGNhbGxiYWNrKTtcblx0XHR9XG5cblx0XHR0aGlzW2tGbHVzaGVkSGVhZGVyc10gPSBmYWxzZTtcblx0fVxuXG5cdGdldCBtZXRob2QoKSB7XG5cdFx0cmV0dXJuIHRoaXNba0hlYWRlcnNdW0hUVFAyX0hFQURFUl9NRVRIT0RdO1xuXHR9XG5cblx0c2V0IG1ldGhvZCh2YWx1ZSkge1xuXHRcdGlmICh2YWx1ZSkge1xuXHRcdFx0dGhpc1trSGVhZGVyc11bSFRUUDJfSEVBREVSX01FVEhPRF0gPSB2YWx1ZS50b1VwcGVyQ2FzZSgpO1xuXHRcdH1cblx0fVxuXG5cdGdldCBwYXRoKCkge1xuXHRcdGNvbnN0IGhlYWRlciA9IHRoaXMubWV0aG9kID09PSAnQ09OTkVDVCcgPyBIVFRQMl9IRUFERVJfQVVUSE9SSVRZIDogSFRUUDJfSEVBREVSX1BBVEg7XG5cblx0XHRyZXR1cm4gdGhpc1trSGVhZGVyc11baGVhZGVyXTtcblx0fVxuXG5cdHNldCBwYXRoKHZhbHVlKSB7XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRjb25zdCBoZWFkZXIgPSB0aGlzLm1ldGhvZCA9PT0gJ0NPTk5FQ1QnID8gSFRUUDJfSEVBREVSX0FVVEhPUklUWSA6IEhUVFAyX0hFQURFUl9QQVRIO1xuXG5cdFx0XHR0aGlzW2tIZWFkZXJzXVtoZWFkZXJdID0gdmFsdWU7XG5cdFx0fVxuXHR9XG5cblx0Z2V0IGhvc3QoKSB7XG5cdFx0cmV0dXJuIHRoaXNba09yaWdpbl0uaG9zdG5hbWU7XG5cdH1cblxuXHRzZXQgaG9zdChfdmFsdWUpIHtcblx0XHQvLyBEbyBub3RoaW5nIGFzIHRoaXMgaXMgcmVhZCBvbmx5LlxuXHR9XG5cblx0Z2V0IF9tdXN0Tm90SGF2ZUFCb2R5KCkge1xuXHRcdHJldHVybiB0aGlzLm1ldGhvZCA9PT0gJ0dFVCcgfHwgdGhpcy5tZXRob2QgPT09ICdIRUFEJyB8fCB0aGlzLm1ldGhvZCA9PT0gJ0RFTEVURSc7XG5cdH1cblxuXHRfd3JpdGUoY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuXHRcdC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9ibG9iLzY1NGRmMDlhZTBjNWUxN2QxYjUyYTkwMGE1NDVmMDY2NGQ4Yzc2MjcvbGliL2ludGVybmFsL2h0dHAyL3V0aWwuanMjTDE0OC1MMTU2XG5cdFx0aWYgKHRoaXMuX211c3ROb3RIYXZlQUJvZHkpIHtcblx0XHRcdGNhbGxiYWNrKG5ldyBFcnJvcignVGhlIEdFVCwgSEVBRCBhbmQgREVMRVRFIG1ldGhvZHMgbXVzdCBOT1QgaGF2ZSBhIGJvZHknKSk7XG5cdFx0XHQvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dDogTm9kZS5qcyAxMiB0aHJvd3MgZGlyZWN0bHkgKi9cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0aGlzLmZsdXNoSGVhZGVycygpO1xuXG5cdFx0Y29uc3QgY2FsbFdyaXRlID0gKCkgPT4gdGhpcy5fcmVxdWVzdC53cml0ZShjaHVuaywgZW5jb2RpbmcsIGNhbGxiYWNrKTtcblx0XHRpZiAodGhpcy5fcmVxdWVzdCkge1xuXHRcdFx0Y2FsbFdyaXRlKCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXNba0pvYnNdLnB1c2goY2FsbFdyaXRlKTtcblx0XHR9XG5cdH1cblxuXHRfZmluYWwoY2FsbGJhY2spIHtcblx0XHR0aGlzLmZsdXNoSGVhZGVycygpO1xuXG5cdFx0Y29uc3QgY2FsbEVuZCA9ICgpID0+IHtcblx0XHRcdC8vIEZvciBHRVQsIEhFQUQgYW5kIERFTEVURSBhbmQgQ09OTkVDVFxuXHRcdFx0aWYgKHRoaXMuX211c3ROb3RIYXZlQUJvZHkgfHwgdGhpcy5tZXRob2QgPT09ICdDT05ORUNUJykge1xuXHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMuX3JlcXVlc3QuZW5kKGNhbGxiYWNrKTtcblx0XHR9O1xuXG5cdFx0aWYgKHRoaXMuX3JlcXVlc3QpIHtcblx0XHRcdGNhbGxFbmQoKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpc1trSm9ic10ucHVzaChjYWxsRW5kKTtcblx0XHR9XG5cdH1cblxuXHRhYm9ydCgpIHtcblx0XHRpZiAodGhpcy5yZXMgJiYgdGhpcy5yZXMuY29tcGxldGUpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIXRoaXMuYWJvcnRlZCkge1xuXHRcdFx0cHJvY2Vzcy5uZXh0VGljaygoKSA9PiB0aGlzLmVtaXQoJ2Fib3J0JykpO1xuXHRcdH1cblxuXHRcdHRoaXMuYWJvcnRlZCA9IHRydWU7XG5cblx0XHR0aGlzLmRlc3Ryb3koKTtcblx0fVxuXG5cdGFzeW5jIF9kZXN0cm95KGVycm9yLCBjYWxsYmFjaykge1xuXHRcdGlmICh0aGlzLnJlcykge1xuXHRcdFx0dGhpcy5yZXMuX2R1bXAoKTtcblx0XHR9XG5cblx0XHRpZiAodGhpcy5fcmVxdWVzdCkge1xuXHRcdFx0dGhpcy5fcmVxdWVzdC5kZXN0cm95KCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb2Nlc3MubmV4dFRpY2soKCkgPT4ge1xuXHRcdFx0XHR0aGlzLmVtaXQoJ2Nsb3NlJyk7XG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHR0cnkge1xuXHRcdFx0YXdhaXQgdGhpc1trUGVuZGluZ0FnZW50UHJvbWlzZV07XG5cdFx0fSBjYXRjaCAoaW50ZXJuYWxFcnJvcikge1xuXHRcdFx0aWYgKHRoaXMuYWJvcnRlZCkge1xuXHRcdFx0XHRlcnJvciA9IGludGVybmFsRXJyb3I7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Y2FsbGJhY2soZXJyb3IpO1xuXHR9XG5cblx0YXN5bmMgZmx1c2hIZWFkZXJzKCkge1xuXHRcdGlmICh0aGlzW2tGbHVzaGVkSGVhZGVyc10gfHwgdGhpcy5kZXN0cm95ZWQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0aGlzW2tGbHVzaGVkSGVhZGVyc10gPSB0cnVlO1xuXG5cdFx0Y29uc3QgaXNDb25uZWN0TWV0aG9kID0gdGhpcy5tZXRob2QgPT09IEhUVFAyX01FVEhPRF9DT05ORUNUO1xuXG5cdFx0Ly8gVGhlIHJlYWwgbWFnaWMgaXMgaGVyZVxuXHRcdGNvbnN0IG9uU3RyZWFtID0gc3RyZWFtID0+IHtcblx0XHRcdHRoaXMuX3JlcXVlc3QgPSBzdHJlYW07XG5cblx0XHRcdGlmICh0aGlzLmRlc3Ryb3llZCkge1xuXHRcdFx0XHRzdHJlYW0uZGVzdHJveSgpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvcndhcmRzIGB0aW1lb3V0YCwgYGNvbnRpbnVlYCwgYGNsb3NlYCBhbmQgYGVycm9yYCBldmVudHMgdG8gdGhpcyBpbnN0YW5jZS5cblx0XHRcdGlmICghaXNDb25uZWN0TWV0aG9kKSB7XG5cdFx0XHRcdC8vIFRPRE86IFNob3VsZCB3ZSBwcm94eSBgY2xvc2VgIGhlcmU/XG5cdFx0XHRcdHByb3h5RXZlbnRzKHN0cmVhbSwgdGhpcywgWyd0aW1lb3V0JywgJ2NvbnRpbnVlJ10pO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHJlYW0ub25jZSgnZXJyb3InLCBlcnJvciA9PiB7XG5cdFx0XHRcdHRoaXMuZGVzdHJveShlcnJvcik7XG5cdFx0XHR9KTtcblxuXHRcdFx0c3RyZWFtLm9uY2UoJ2Fib3J0ZWQnLCAoKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHtyZXN9ID0gdGhpcztcblx0XHRcdFx0aWYgKHJlcykge1xuXHRcdFx0XHRcdHJlcy5hYm9ydGVkID0gdHJ1ZTtcblx0XHRcdFx0XHRyZXMuZW1pdCgnYWJvcnRlZCcpO1xuXHRcdFx0XHRcdHJlcy5kZXN0cm95KCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhpcy5kZXN0cm95KG5ldyBFcnJvcignVGhlIHNlcnZlciBhYm9ydGVkIHRoZSBIVFRQLzIgc3RyZWFtJykpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0Y29uc3Qgb25SZXNwb25zZSA9IChoZWFkZXJzLCBmbGFncywgcmF3SGVhZGVycykgPT4ge1xuXHRcdFx0XHQvLyBJZiB3ZSB3ZXJlIHRvIGVtaXQgcmF3IHJlcXVlc3Qgc3RyZWFtLCBpdCB3b3VsZCBiZSBhcyBmYXN0IGFzIHRoZSBuYXRpdmUgYXBwcm9hY2guXG5cdFx0XHRcdC8vIE5vdGUgdGhhdCB3cmFwcGluZyB0aGUgcmF3IHN0cmVhbSBpbiBhIFByb3h5IGluc3RhbmNlIHdvbid0IGltcHJvdmUgdGhlIHBlcmZvcm1hbmNlIChhbHJlYWR5IHRlc3RlZCBpdCkuXG5cdFx0XHRcdGNvbnN0IHJlc3BvbnNlID0gbmV3IEluY29taW5nTWVzc2FnZSh0aGlzLnNvY2tldCwgc3RyZWFtLnJlYWRhYmxlSGlnaFdhdGVyTWFyayk7XG5cdFx0XHRcdHRoaXMucmVzID0gcmVzcG9uc2U7XG5cblx0XHRcdFx0Ly8gVW5kb2N1bWVudGVkLCBidXQgaXQgaXMgdXNlZCBieSBgY2FjaGVhYmxlLXJlcXVlc3RgXG5cdFx0XHRcdHJlc3BvbnNlLnVybCA9IGAke3RoaXNba09yaWdpbl0ub3JpZ2lufSR7dGhpcy5wYXRofWA7XG5cblx0XHRcdFx0cmVzcG9uc2UucmVxID0gdGhpcztcblx0XHRcdFx0cmVzcG9uc2Uuc3RhdHVzQ29kZSA9IGhlYWRlcnNbSFRUUDJfSEVBREVSX1NUQVRVU107XG5cdFx0XHRcdHJlc3BvbnNlLmhlYWRlcnMgPSBoZWFkZXJzO1xuXHRcdFx0XHRyZXNwb25zZS5yYXdIZWFkZXJzID0gcmF3SGVhZGVycztcblxuXHRcdFx0XHRyZXNwb25zZS5vbmNlKCdlbmQnLCAoKSA9PiB7XG5cdFx0XHRcdFx0cmVzcG9uc2UuY29tcGxldGUgPSB0cnVlO1xuXG5cdFx0XHRcdFx0Ly8gSGFzIG5vIGVmZmVjdCwganVzdCBiZSBjb25zaXN0ZW50IHdpdGggdGhlIE5vZGUuanMgYmVoYXZpb3Jcblx0XHRcdFx0XHRyZXNwb25zZS5zb2NrZXQgPSBudWxsO1xuXHRcdFx0XHRcdHJlc3BvbnNlLmNvbm5lY3Rpb24gPSBudWxsO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRpZiAoaXNDb25uZWN0TWV0aG9kKSB7XG5cdFx0XHRcdFx0cmVzcG9uc2UudXBncmFkZSA9IHRydWU7XG5cblx0XHRcdFx0XHQvLyBUaGUgSFRUUDEgQVBJIHNheXMgdGhlIHNvY2tldCBpcyBkZXRhY2hlZCBoZXJlLFxuXHRcdFx0XHRcdC8vIGJ1dCB3ZSBjYW4ndCBkbyB0aGF0IHNvIHdlIHBhc3MgdGhlIG9yaWdpbmFsIEhUVFAyIHJlcXVlc3QuXG5cdFx0XHRcdFx0aWYgKHRoaXMuZW1pdCgnY29ubmVjdCcsIHJlc3BvbnNlLCBzdHJlYW0sIEJ1ZmZlci5hbGxvYygwKSkpIHtcblx0XHRcdFx0XHRcdHRoaXMuZW1pdCgnY2xvc2UnKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Ly8gTm8gbGlzdGVuZXJzIGF0dGFjaGVkLCBkZXN0cm95IHRoZSBvcmlnaW5hbCByZXF1ZXN0LlxuXHRcdFx0XHRcdFx0c3RyZWFtLmRlc3Ryb3koKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Ly8gRm9yd2FyZHMgZGF0YVxuXHRcdFx0XHRcdHN0cmVhbS5vbignZGF0YScsIGNodW5rID0+IHtcblx0XHRcdFx0XHRcdGlmICghcmVzcG9uc2UuX2R1bXBlZCAmJiAhcmVzcG9uc2UucHVzaChjaHVuaykpIHtcblx0XHRcdFx0XHRcdFx0c3RyZWFtLnBhdXNlKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRzdHJlYW0ub25jZSgnZW5kJywgKCkgPT4ge1xuXHRcdFx0XHRcdFx0aWYgKCF0aGlzLmFib3J0ZWQpIHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2UucHVzaChudWxsKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdGlmICghdGhpcy5lbWl0KCdyZXNwb25zZScsIHJlc3BvbnNlKSkge1xuXHRcdFx0XHRcdFx0Ly8gTm8gbGlzdGVuZXJzIGF0dGFjaGVkLCBkdW1wIHRoZSByZXNwb25zZS5cblx0XHRcdFx0XHRcdHJlc3BvbnNlLl9kdW1wKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHQvLyBUaGlzIGV2ZW50IHRlbGxzIHdlIGFyZSByZWFkeSB0byBsaXN0ZW4gZm9yIHRoZSBkYXRhLlxuXHRcdFx0c3RyZWFtLm9uY2UoJ3Jlc3BvbnNlJywgb25SZXNwb25zZSk7XG5cblx0XHRcdC8vIEVtaXRzIGBpbmZvcm1hdGlvbmAgZXZlbnRcblx0XHRcdHN0cmVhbS5vbmNlKCdoZWFkZXJzJywgaGVhZGVycyA9PiB0aGlzLmVtaXQoJ2luZm9ybWF0aW9uJywge3N0YXR1c0NvZGU6IGhlYWRlcnNbSFRUUDJfSEVBREVSX1NUQVRVU119KSk7XG5cblx0XHRcdHN0cmVhbS5vbmNlKCd0cmFpbGVycycsICh0cmFpbGVycywgZmxhZ3MsIHJhd1RyYWlsZXJzKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHtyZXN9ID0gdGhpcztcblxuXHRcdFx0XHQvLyBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvaXNzdWVzLzQxMjUxXG5cdFx0XHRcdGlmIChyZXMgPT09IG51bGwpIHtcblx0XHRcdFx0XHRvblJlc3BvbnNlKHRyYWlsZXJzLCBmbGFncywgcmF3VHJhaWxlcnMpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFzc2lnbnMgdHJhaWxlcnMgdG8gdGhlIHJlc3BvbnNlIG9iamVjdC5cblx0XHRcdFx0cmVzLnRyYWlsZXJzID0gdHJhaWxlcnM7XG5cdFx0XHRcdHJlcy5yYXdUcmFpbGVycyA9IHJhd1RyYWlsZXJzO1xuXHRcdFx0fSk7XG5cblx0XHRcdHN0cmVhbS5vbmNlKCdjbG9zZScsICgpID0+IHtcblx0XHRcdFx0Y29uc3Qge2Fib3J0ZWQsIHJlc30gPSB0aGlzO1xuXHRcdFx0XHRpZiAocmVzKSB7XG5cdFx0XHRcdFx0aWYgKGFib3J0ZWQpIHtcblx0XHRcdFx0XHRcdHJlcy5hYm9ydGVkID0gdHJ1ZTtcblx0XHRcdFx0XHRcdHJlcy5lbWl0KCdhYm9ydGVkJyk7XG5cdFx0XHRcdFx0XHRyZXMuZGVzdHJveSgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGNvbnN0IGZpbmlzaCA9ICgpID0+IHtcblx0XHRcdFx0XHRcdHJlcy5lbWl0KCdjbG9zZScpO1xuXG5cdFx0XHRcdFx0XHR0aGlzLmRlc3Ryb3koKTtcblx0XHRcdFx0XHRcdHRoaXMuZW1pdCgnY2xvc2UnKTtcblx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0aWYgKHJlcy5yZWFkYWJsZSkge1xuXHRcdFx0XHRcdFx0cmVzLm9uY2UoJ2VuZCcsIGZpbmlzaCk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGZpbmlzaCgpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICghdGhpcy5kZXN0cm95ZWQpIHtcblx0XHRcdFx0XHR0aGlzLmRlc3Ryb3kobmV3IEVycm9yKCdUaGUgSFRUUC8yIHN0cmVhbSBoYXMgYmVlbiBlYXJseSB0ZXJtaW5hdGVkJykpO1xuXHRcdFx0XHRcdHRoaXMuZW1pdCgnY2xvc2UnKTtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0aGlzLmRlc3Ryb3koKTtcblx0XHRcdFx0dGhpcy5lbWl0KCdjbG9zZScpO1xuXHRcdFx0fSk7XG5cblx0XHRcdHRoaXMuc29ja2V0ID0gbmV3IFByb3h5KHN0cmVhbSwgcHJveHlTb2NrZXRIYW5kbGVyKTtcblxuXHRcdFx0Zm9yIChjb25zdCBqb2Igb2YgdGhpc1trSm9ic10pIHtcblx0XHRcdFx0am9iKCk7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXNba0pvYnNdLmxlbmd0aCA9IDA7XG5cblx0XHRcdHRoaXMuZW1pdCgnc29ja2V0JywgdGhpcy5zb2NrZXQpO1xuXHRcdH07XG5cblx0XHRpZiAoIShIVFRQMl9IRUFERVJfQVVUSE9SSVRZIGluIHRoaXNba0hlYWRlcnNdKSAmJiAhaXNDb25uZWN0TWV0aG9kKSB7XG5cdFx0XHR0aGlzW2tIZWFkZXJzXVtIVFRQMl9IRUFERVJfQVVUSE9SSVRZXSA9IHRoaXNba09yaWdpbl0uaG9zdDtcblx0XHR9XG5cblx0XHQvLyBNYWtlcyBhIEhUVFAyIHJlcXVlc3Rcblx0XHRpZiAodGhpc1trU2Vzc2lvbl0pIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdG9uU3RyZWFtKHRoaXNba1Nlc3Npb25dLnJlcXVlc3QodGhpc1trSGVhZGVyc10pKTtcblx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRcdHRoaXMuZGVzdHJveShlcnJvcik7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMucmV1c2VkU29ja2V0ID0gdHJ1ZTtcblxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Y29uc3QgcHJvbWlzZSA9IHRoaXMuYWdlbnQucmVxdWVzdCh0aGlzW2tPcmlnaW5dLCB0aGlzW2tPcHRpb25zXSwgdGhpc1trSGVhZGVyc10pO1xuXHRcdFx0XHR0aGlzW2tQZW5kaW5nQWdlbnRQcm9taXNlXSA9IHByb21pc2U7XG5cblx0XHRcdFx0b25TdHJlYW0oYXdhaXQgcHJvbWlzZSk7XG5cblx0XHRcdFx0dGhpc1trUGVuZGluZ0FnZW50UHJvbWlzZV0gPSBmYWxzZTtcblx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRcdHRoaXNba1BlbmRpbmdBZ2VudFByb21pc2VdID0gZmFsc2U7XG5cblx0XHRcdFx0dGhpcy5kZXN0cm95KGVycm9yKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRnZXQgY29ubmVjdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5zb2NrZXQ7XG5cdH1cblxuXHRzZXQgY29ubmVjdGlvbih2YWx1ZSkge1xuXHRcdHRoaXMuc29ja2V0ID0gdmFsdWU7XG5cdH1cblxuXHRnZXRIZWFkZXJOYW1lcygpIHtcblx0XHRyZXR1cm4gT2JqZWN0LmtleXModGhpc1trSGVhZGVyc10pO1xuXHR9XG5cblx0aGFzSGVhZGVyKG5hbWUpIHtcblx0XHRpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKSB7XG5cdFx0XHR0aHJvdyBuZXcgRVJSX0lOVkFMSURfQVJHX1RZUEUoJ25hbWUnLCAnc3RyaW5nJywgbmFtZSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIEJvb2xlYW4odGhpc1trSGVhZGVyc11bbmFtZS50b0xvd2VyQ2FzZSgpXSk7XG5cdH1cblxuXHRnZXRIZWFkZXIobmFtZSkge1xuXHRcdGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHtcblx0XHRcdHRocm93IG5ldyBFUlJfSU5WQUxJRF9BUkdfVFlQRSgnbmFtZScsICdzdHJpbmcnLCBuYW1lKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpc1trSGVhZGVyc11bbmFtZS50b0xvd2VyQ2FzZSgpXTtcblx0fVxuXG5cdGdldCBoZWFkZXJzU2VudCgpIHtcblx0XHRyZXR1cm4gdGhpc1trRmx1c2hlZEhlYWRlcnNdO1xuXHR9XG5cblx0cmVtb3ZlSGVhZGVyKG5hbWUpIHtcblx0XHRpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKSB7XG5cdFx0XHR0aHJvdyBuZXcgRVJSX0lOVkFMSURfQVJHX1RZUEUoJ25hbWUnLCAnc3RyaW5nJywgbmFtZSk7XG5cdFx0fVxuXG5cdFx0aWYgKHRoaXMuaGVhZGVyc1NlbnQpIHtcblx0XHRcdHRocm93IG5ldyBFUlJfSFRUUF9IRUFERVJTX1NFTlQoJ3JlbW92ZScpO1xuXHRcdH1cblxuXHRcdGRlbGV0ZSB0aGlzW2tIZWFkZXJzXVtuYW1lLnRvTG93ZXJDYXNlKCldO1xuXHR9XG5cblx0c2V0SGVhZGVyKG5hbWUsIHZhbHVlKSB7XG5cdFx0aWYgKHRoaXMuaGVhZGVyc1NlbnQpIHtcblx0XHRcdHRocm93IG5ldyBFUlJfSFRUUF9IRUFERVJTX1NFTlQoJ3NldCcpO1xuXHRcdH1cblxuXHRcdHZhbGlkYXRlSGVhZGVyTmFtZShuYW1lKTtcblx0XHR2YWxpZGF0ZUhlYWRlclZhbHVlKG5hbWUsIHZhbHVlKTtcblxuXHRcdGNvbnN0IGxvd2VyY2FzZWQgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRpZiAobG93ZXJjYXNlZCA9PT0gJ2Nvbm5lY3Rpb24nKSB7XG5cdFx0XHRpZiAodmFsdWUudG9Mb3dlckNhc2UoKSA9PT0gJ2tlZXAtYWxpdmUnKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkICdjb25uZWN0aW9uJyBoZWFkZXI6ICR7dmFsdWV9YCk7XG5cdFx0fVxuXG5cdFx0aWYgKGxvd2VyY2FzZWQgPT09ICdob3N0JyAmJiB0aGlzLm1ldGhvZCA9PT0gJ0NPTk5FQ1QnKSB7XG5cdFx0XHR0aGlzW2tIZWFkZXJzXVtIVFRQMl9IRUFERVJfQVVUSE9SSVRZXSA9IHZhbHVlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzW2tIZWFkZXJzXVtsb3dlcmNhc2VkXSA9IHZhbHVlO1xuXHRcdH1cblx0fVxuXG5cdHNldE5vRGVsYXkoKSB7XG5cdFx0Ly8gSFRUUDIgc29ja2V0cyBjYW5ub3QgYmUgbWFsZm9ybWVkLCBkbyBub3RoaW5nLlxuXHR9XG5cblx0c2V0U29ja2V0S2VlcEFsaXZlKCkge1xuXHRcdC8vIEhUVFAyIHNvY2tldHMgY2Fubm90IGJlIG1hbGZvcm1lZCwgZG8gbm90aGluZy5cblx0fVxuXG5cdHNldFRpbWVvdXQobXMsIGNhbGxiYWNrKSB7XG5cdFx0Y29uc3QgYXBwbHlUaW1lb3V0ID0gKCkgPT4gdGhpcy5fcmVxdWVzdC5zZXRUaW1lb3V0KG1zLCBjYWxsYmFjayk7XG5cblx0XHRpZiAodGhpcy5fcmVxdWVzdCkge1xuXHRcdFx0YXBwbHlUaW1lb3V0KCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXNba0pvYnNdLnB1c2goYXBwbHlUaW1lb3V0KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdGdldCBtYXhIZWFkZXJzQ291bnQoKSB7XG5cdFx0aWYgKCF0aGlzLmRlc3Ryb3llZCAmJiB0aGlzLl9yZXF1ZXN0KSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5fcmVxdWVzdC5zZXNzaW9uLmxvY2FsU2V0dGluZ3MubWF4SGVhZGVyTGlzdFNpemU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0fVxuXG5cdHNldCBtYXhIZWFkZXJzQ291bnQoX3ZhbHVlKSB7XG5cdFx0Ly8gVXBkYXRpbmcgSFRUUDIgc2V0dGluZ3Mgd291bGQgYWZmZWN0IGFsbCByZXF1ZXN0cywgZG8gbm90aGluZy5cblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENsaWVudFJlcXVlc3Q7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/client-request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/incoming-message.js":
/*!***************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/incoming-message.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst {Readable} = __webpack_require__(/*! stream */ \"stream\");\n\nclass IncomingMessage extends Readable {\n\tconstructor(socket, highWaterMark) {\n\t\tsuper({\n\t\t\temitClose: false,\n\t\t\tautoDestroy: true,\n\t\t\thighWaterMark\n\t\t});\n\n\t\tthis.statusCode = null;\n\t\tthis.statusMessage = '';\n\t\tthis.httpVersion = '2.0';\n\t\tthis.httpVersionMajor = 2;\n\t\tthis.httpVersionMinor = 0;\n\t\tthis.headers = {};\n\t\tthis.trailers = {};\n\t\tthis.req = null;\n\n\t\tthis.aborted = false;\n\t\tthis.complete = false;\n\t\tthis.upgrade = null;\n\n\t\tthis.rawHeaders = [];\n\t\tthis.rawTrailers = [];\n\n\t\tthis.socket = socket;\n\n\t\tthis._dumped = false;\n\t}\n\n\tget connection() {\n\t\treturn this.socket;\n\t}\n\n\tset connection(value) {\n\t\tthis.socket = value;\n\t}\n\n\t_destroy(error, callback) {\n\t\tif (!this.readableEnded) {\n\t\t\tthis.aborted = true;\n\t\t}\n\n\t\t// See https://github.com/nodejs/node/issues/35303\n\t\tcallback();\n\n\t\tthis.req._request.destroy(error);\n\t}\n\n\tsetTimeout(ms, callback) {\n\t\tthis.req.setTimeout(ms, callback);\n\t\treturn this;\n\t}\n\n\t_dump() {\n\t\tif (!this._dumped) {\n\t\t\tthis._dumped = true;\n\n\t\t\tthis.removeAllListeners('data');\n\t\t\tthis.resume();\n\t\t}\n\t}\n\n\t_read() {\n\t\tif (this.req) {\n\t\t\tthis.req._request.resume();\n\t\t}\n\t}\n}\n\nmodule.exports = IncomingMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvaW5jb21pbmctbWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLE9BQU8sVUFBVSxFQUFFLG1CQUFPLENBQUMsc0JBQVE7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmZtLWJvdC8uL25vZGVfbW9kdWxlcy9odHRwMi13cmFwcGVyL3NvdXJjZS9pbmNvbWluZy1tZXNzYWdlLmpzPzU3OWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge1JlYWRhYmxlfSA9IHJlcXVpcmUoJ3N0cmVhbScpO1xuXG5jbGFzcyBJbmNvbWluZ01lc3NhZ2UgZXh0ZW5kcyBSZWFkYWJsZSB7XG5cdGNvbnN0cnVjdG9yKHNvY2tldCwgaGlnaFdhdGVyTWFyaykge1xuXHRcdHN1cGVyKHtcblx0XHRcdGVtaXRDbG9zZTogZmFsc2UsXG5cdFx0XHRhdXRvRGVzdHJveTogdHJ1ZSxcblx0XHRcdGhpZ2hXYXRlck1hcmtcblx0XHR9KTtcblxuXHRcdHRoaXMuc3RhdHVzQ29kZSA9IG51bGw7XG5cdFx0dGhpcy5zdGF0dXNNZXNzYWdlID0gJyc7XG5cdFx0dGhpcy5odHRwVmVyc2lvbiA9ICcyLjAnO1xuXHRcdHRoaXMuaHR0cFZlcnNpb25NYWpvciA9IDI7XG5cdFx0dGhpcy5odHRwVmVyc2lvbk1pbm9yID0gMDtcblx0XHR0aGlzLmhlYWRlcnMgPSB7fTtcblx0XHR0aGlzLnRyYWlsZXJzID0ge307XG5cdFx0dGhpcy5yZXEgPSBudWxsO1xuXG5cdFx0dGhpcy5hYm9ydGVkID0gZmFsc2U7XG5cdFx0dGhpcy5jb21wbGV0ZSA9IGZhbHNlO1xuXHRcdHRoaXMudXBncmFkZSA9IG51bGw7XG5cblx0XHR0aGlzLnJhd0hlYWRlcnMgPSBbXTtcblx0XHR0aGlzLnJhd1RyYWlsZXJzID0gW107XG5cblx0XHR0aGlzLnNvY2tldCA9IHNvY2tldDtcblxuXHRcdHRoaXMuX2R1bXBlZCA9IGZhbHNlO1xuXHR9XG5cblx0Z2V0IGNvbm5lY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuc29ja2V0O1xuXHR9XG5cblx0c2V0IGNvbm5lY3Rpb24odmFsdWUpIHtcblx0XHR0aGlzLnNvY2tldCA9IHZhbHVlO1xuXHR9XG5cblx0X2Rlc3Ryb3koZXJyb3IsIGNhbGxiYWNrKSB7XG5cdFx0aWYgKCF0aGlzLnJlYWRhYmxlRW5kZWQpIHtcblx0XHRcdHRoaXMuYWJvcnRlZCA9IHRydWU7XG5cdFx0fVxuXG5cdFx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvMzUzMDNcblx0XHRjYWxsYmFjaygpO1xuXG5cdFx0dGhpcy5yZXEuX3JlcXVlc3QuZGVzdHJveShlcnJvcik7XG5cdH1cblxuXHRzZXRUaW1lb3V0KG1zLCBjYWxsYmFjaykge1xuXHRcdHRoaXMucmVxLnNldFRpbWVvdXQobXMsIGNhbGxiYWNrKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdF9kdW1wKCkge1xuXHRcdGlmICghdGhpcy5fZHVtcGVkKSB7XG5cdFx0XHR0aGlzLl9kdW1wZWQgPSB0cnVlO1xuXG5cdFx0XHR0aGlzLnJlbW92ZUFsbExpc3RlbmVycygnZGF0YScpO1xuXHRcdFx0dGhpcy5yZXN1bWUoKTtcblx0XHR9XG5cdH1cblxuXHRfcmVhZCgpIHtcblx0XHRpZiAodGhpcy5yZXEpIHtcblx0XHRcdHRoaXMucmVxLl9yZXF1ZXN0LnJlc3VtZSgpO1xuXHRcdH1cblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEluY29taW5nTWVzc2FnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/incoming-message.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/index.js":
/*!****************************************************!*\
  !*** ./node_modules/http2-wrapper/source/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst http2 = __webpack_require__(/*! http2 */ \"http2\");\nconst {\n\tAgent,\n\tglobalAgent\n} = __webpack_require__(/*! ./agent.js */ \"(rsc)/./node_modules/http2-wrapper/source/agent.js\");\nconst ClientRequest = __webpack_require__(/*! ./client-request.js */ \"(rsc)/./node_modules/http2-wrapper/source/client-request.js\");\nconst IncomingMessage = __webpack_require__(/*! ./incoming-message.js */ \"(rsc)/./node_modules/http2-wrapper/source/incoming-message.js\");\nconst auto = __webpack_require__(/*! ./auto.js */ \"(rsc)/./node_modules/http2-wrapper/source/auto.js\");\nconst {\n\tHttpOverHttp2,\n\tHttpsOverHttp2\n} = __webpack_require__(/*! ./proxies/h1-over-h2.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/h1-over-h2.js\");\nconst Http2OverHttp2 = __webpack_require__(/*! ./proxies/h2-over-h2.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-h2.js\");\nconst {\n\tHttp2OverHttp,\n\tHttp2OverHttps\n} = __webpack_require__(/*! ./proxies/h2-over-h1.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-h1.js\");\nconst validateHeaderName = __webpack_require__(/*! ./utils/validate-header-name.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/validate-header-name.js\");\nconst validateHeaderValue = __webpack_require__(/*! ./utils/validate-header-value.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/validate-header-value.js\");\n\nconst request = (url, options, callback) => new ClientRequest(url, options, callback);\n\nconst get = (url, options, callback) => {\n\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\tconst req = new ClientRequest(url, options, callback);\n\treq.end();\n\n\treturn req;\n};\n\nmodule.exports = {\n\t...http2,\n\tClientRequest,\n\tIncomingMessage,\n\tAgent,\n\tglobalAgent,\n\trequest,\n\tget,\n\tauto,\n\tproxies: {\n\t\tHttpOverHttp2,\n\t\tHttpsOverHttp2,\n\t\tHttp2OverHttp2,\n\t\tHttp2OverHttp,\n\t\tHttp2OverHttps\n\t},\n\tvalidateHeaderName,\n\tvalidateHeaderValue\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixjQUFjLG1CQUFPLENBQUMsb0JBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsc0VBQVk7QUFDeEIsc0JBQXNCLG1CQUFPLENBQUMsd0ZBQXFCO0FBQ25ELHdCQUF3QixtQkFBTyxDQUFDLDRGQUF1QjtBQUN2RCxhQUFhLG1CQUFPLENBQUMsb0VBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsZ0dBQXlCO0FBQ3JDLHVCQUF1QixtQkFBTyxDQUFDLGdHQUF5QjtBQUN4RDtBQUNBO0FBQ0E7QUFDQSxFQUFFLEVBQUUsbUJBQU8sQ0FBQyxnR0FBeUI7QUFDckMsMkJBQTJCLG1CQUFPLENBQUMsZ0hBQWlDO0FBQ3BFLDRCQUE0QixtQkFBTyxDQUFDLGtIQUFrQzs7QUFFdEU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG5mbS1ib3QvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvaW5kZXguanM/ODVkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBodHRwMiA9IHJlcXVpcmUoJ2h0dHAyJyk7XG5jb25zdCB7XG5cdEFnZW50LFxuXHRnbG9iYWxBZ2VudFxufSA9IHJlcXVpcmUoJy4vYWdlbnQuanMnKTtcbmNvbnN0IENsaWVudFJlcXVlc3QgPSByZXF1aXJlKCcuL2NsaWVudC1yZXF1ZXN0LmpzJyk7XG5jb25zdCBJbmNvbWluZ01lc3NhZ2UgPSByZXF1aXJlKCcuL2luY29taW5nLW1lc3NhZ2UuanMnKTtcbmNvbnN0IGF1dG8gPSByZXF1aXJlKCcuL2F1dG8uanMnKTtcbmNvbnN0IHtcblx0SHR0cE92ZXJIdHRwMixcblx0SHR0cHNPdmVySHR0cDJcbn0gPSByZXF1aXJlKCcuL3Byb3hpZXMvaDEtb3Zlci1oMi5qcycpO1xuY29uc3QgSHR0cDJPdmVySHR0cDIgPSByZXF1aXJlKCcuL3Byb3hpZXMvaDItb3Zlci1oMi5qcycpO1xuY29uc3Qge1xuXHRIdHRwMk92ZXJIdHRwLFxuXHRIdHRwMk92ZXJIdHRwc1xufSA9IHJlcXVpcmUoJy4vcHJveGllcy9oMi1vdmVyLWgxLmpzJyk7XG5jb25zdCB2YWxpZGF0ZUhlYWRlck5hbWUgPSByZXF1aXJlKCcuL3V0aWxzL3ZhbGlkYXRlLWhlYWRlci1uYW1lLmpzJyk7XG5jb25zdCB2YWxpZGF0ZUhlYWRlclZhbHVlID0gcmVxdWlyZSgnLi91dGlscy92YWxpZGF0ZS1oZWFkZXItdmFsdWUuanMnKTtcblxuY29uc3QgcmVxdWVzdCA9ICh1cmwsIG9wdGlvbnMsIGNhbGxiYWNrKSA9PiBuZXcgQ2xpZW50UmVxdWVzdCh1cmwsIG9wdGlvbnMsIGNhbGxiYWNrKTtcblxuY29uc3QgZ2V0ID0gKHVybCwgb3B0aW9ucywgY2FsbGJhY2spID0+IHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vcHJldmVudC1hYmJyZXZpYXRpb25zXG5cdGNvbnN0IHJlcSA9IG5ldyBDbGllbnRSZXF1ZXN0KHVybCwgb3B0aW9ucywgY2FsbGJhY2spO1xuXHRyZXEuZW5kKCk7XG5cblx0cmV0dXJuIHJlcTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXHQuLi5odHRwMixcblx0Q2xpZW50UmVxdWVzdCxcblx0SW5jb21pbmdNZXNzYWdlLFxuXHRBZ2VudCxcblx0Z2xvYmFsQWdlbnQsXG5cdHJlcXVlc3QsXG5cdGdldCxcblx0YXV0byxcblx0cHJveGllczoge1xuXHRcdEh0dHBPdmVySHR0cDIsXG5cdFx0SHR0cHNPdmVySHR0cDIsXG5cdFx0SHR0cDJPdmVySHR0cDIsXG5cdFx0SHR0cDJPdmVySHR0cCxcblx0XHRIdHRwMk92ZXJIdHRwc1xuXHR9LFxuXHR2YWxpZGF0ZUhlYWRlck5hbWUsXG5cdHZhbGlkYXRlSGVhZGVyVmFsdWVcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/proxies/get-auth-headers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/proxies/get-auth-headers.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = self => {\n\tconst {username, password} = self.proxyOptions.url;\n\n\tif (username || password) {\n\t\tconst data = `${username}:${password}`;\n\t\tconst authorization = `Basic ${Buffer.from(data).toString('base64')}`;\n\n\t\treturn {\n\t\t\t'proxy-authorization': authorization,\n\t\t\tauthorization\n\t\t};\n\t}\n\n\treturn {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy9nZXQtYXV0aC1oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsUUFBUSxvQkFBb0I7O0FBRTVCO0FBQ0Esa0JBQWtCLFNBQVMsR0FBRyxTQUFTO0FBQ3ZDLGlDQUFpQyxxQ0FBcUM7O0FBRXRFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RuZm0tYm90Ly4vbm9kZV9tb2R1bGVzL2h0dHAyLXdyYXBwZXIvc291cmNlL3Byb3hpZXMvZ2V0LWF1dGgtaGVhZGVycy5qcz8zYmFhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBzZWxmID0+IHtcblx0Y29uc3Qge3VzZXJuYW1lLCBwYXNzd29yZH0gPSBzZWxmLnByb3h5T3B0aW9ucy51cmw7XG5cblx0aWYgKHVzZXJuYW1lIHx8IHBhc3N3b3JkKSB7XG5cdFx0Y29uc3QgZGF0YSA9IGAke3VzZXJuYW1lfToke3Bhc3N3b3JkfWA7XG5cdFx0Y29uc3QgYXV0aG9yaXphdGlvbiA9IGBCYXNpYyAke0J1ZmZlci5mcm9tKGRhdGEpLnRvU3RyaW5nKCdiYXNlNjQnKX1gO1xuXG5cdFx0cmV0dXJuIHtcblx0XHRcdCdwcm94eS1hdXRob3JpemF0aW9uJzogYXV0aG9yaXphdGlvbixcblx0XHRcdGF1dGhvcml6YXRpb25cblx0XHR9O1xuXHR9XG5cblx0cmV0dXJuIHt9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/proxies/get-auth-headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/proxies/h1-over-h2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/proxies/h1-over-h2.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst JSStreamSocket = __webpack_require__(/*! ../utils/js-stream-socket.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/js-stream-socket.js\");\nconst {globalAgent} = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/http2-wrapper/source/agent.js\");\nconst UnexpectedStatusCodeError = __webpack_require__(/*! ./unexpected-status-code-error.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/unexpected-status-code-error.js\");\nconst initialize = __webpack_require__(/*! ./initialize.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/initialize.js\");\nconst getAuthorizationHeaders = __webpack_require__(/*! ./get-auth-headers.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/get-auth-headers.js\");\n\nconst createConnection = (self, options, callback) => {\n\t(async () => {\n\t\ttry {\n\t\t\tconst {proxyOptions} = self;\n\t\t\tconst {url, headers, raw} = proxyOptions;\n\n\t\t\tconst stream = await globalAgent.request(url, proxyOptions, {\n\t\t\t\t...getAuthorizationHeaders(self),\n\t\t\t\t...headers,\n\t\t\t\t':method': 'CONNECT',\n\t\t\t\t':authority': `${options.host}:${options.port}`\n\t\t\t});\n\n\t\t\tstream.once('error', callback);\n\t\t\tstream.once('response', headers => {\n\t\t\t\tconst statusCode = headers[':status'];\n\n\t\t\t\tif (statusCode !== 200) {\n\t\t\t\t\tcallback(new UnexpectedStatusCodeError(statusCode, ''));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst encrypted = self instanceof https.Agent;\n\n\t\t\t\tif (raw && encrypted) {\n\t\t\t\t\toptions.socket = stream;\n\t\t\t\t\tconst secureStream = tls.connect(options);\n\n\t\t\t\t\tsecureStream.once('close', () => {\n\t\t\t\t\t\tstream.destroy();\n\t\t\t\t\t});\n\n\t\t\t\t\tcallback(null, secureStream);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst socket = new JSStreamSocket(stream);\n\t\t\t\tsocket.encrypted = false;\n\t\t\t\tsocket._handle.getpeername = out => {\n\t\t\t\t\tout.family = undefined;\n\t\t\t\t\tout.address = undefined;\n\t\t\t\t\tout.port = undefined;\n\t\t\t\t};\n\n\t\t\t\tcallback(null, socket);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tcallback(error);\n\t\t}\n\t})();\n};\n\nclass HttpOverHttp2 extends http.Agent {\n\tconstructor(options) {\n\t\tsuper(options);\n\n\t\tinitialize(this, options.proxyOptions);\n\t}\n\n\tcreateConnection(options, callback) {\n\t\tcreateConnection(this, options, callback);\n\t}\n}\n\nclass HttpsOverHttp2 extends https.Agent {\n\tconstructor(options) {\n\t\tsuper(options);\n\n\t\tinitialize(this, options.proxyOptions);\n\t}\n\n\tcreateConnection(options, callback) {\n\t\tcreateConnection(this, options, callback);\n\t}\n}\n\nmodule.exports = {\n\tHttpOverHttp2,\n\tHttpsOverHttp2\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy9oMS1vdmVyLWgyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsWUFBWSxtQkFBTyxDQUFDLGdCQUFLO0FBQ3pCLGFBQWEsbUJBQU8sQ0FBQyxrQkFBTTtBQUMzQixjQUFjLG1CQUFPLENBQUMsb0JBQU87QUFDN0IsdUJBQXVCLG1CQUFPLENBQUMseUdBQThCO0FBQzdELE9BQU8sYUFBYSxFQUFFLG1CQUFPLENBQUMsdUVBQWE7QUFDM0Msa0NBQWtDLG1CQUFPLENBQUMsNEhBQW1DO0FBQzdFLG1CQUFtQixtQkFBTyxDQUFDLHdGQUFpQjtBQUM1QyxnQ0FBZ0MsbUJBQU8sQ0FBQyxvR0FBdUI7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBLFVBQVUsY0FBYztBQUN4QixVQUFVLG1CQUFtQjs7QUFFN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsYUFBYSxHQUFHLGFBQWE7QUFDbEQsSUFBSTs7QUFFSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNOztBQUVOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLElBQUk7QUFDSixJQUFJO0FBQ0o7QUFDQTtBQUNBLEVBQUU7QUFDRjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RuZm0tYm90Ly4vbm9kZV9tb2R1bGVzL2h0dHAyLXdyYXBwZXIvc291cmNlL3Byb3hpZXMvaDEtb3Zlci1oMi5qcz83OTRkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IHRscyA9IHJlcXVpcmUoJ3RscycpO1xuY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTtcbmNvbnN0IGh0dHBzID0gcmVxdWlyZSgnaHR0cHMnKTtcbmNvbnN0IEpTU3RyZWFtU29ja2V0ID0gcmVxdWlyZSgnLi4vdXRpbHMvanMtc3RyZWFtLXNvY2tldC5qcycpO1xuY29uc3Qge2dsb2JhbEFnZW50fSA9IHJlcXVpcmUoJy4uL2FnZW50LmpzJyk7XG5jb25zdCBVbmV4cGVjdGVkU3RhdHVzQ29kZUVycm9yID0gcmVxdWlyZSgnLi91bmV4cGVjdGVkLXN0YXR1cy1jb2RlLWVycm9yLmpzJyk7XG5jb25zdCBpbml0aWFsaXplID0gcmVxdWlyZSgnLi9pbml0aWFsaXplLmpzJyk7XG5jb25zdCBnZXRBdXRob3JpemF0aW9uSGVhZGVycyA9IHJlcXVpcmUoJy4vZ2V0LWF1dGgtaGVhZGVycy5qcycpO1xuXG5jb25zdCBjcmVhdGVDb25uZWN0aW9uID0gKHNlbGYsIG9wdGlvbnMsIGNhbGxiYWNrKSA9PiB7XG5cdChhc3luYyAoKSA9PiB7XG5cdFx0dHJ5IHtcblx0XHRcdGNvbnN0IHtwcm94eU9wdGlvbnN9ID0gc2VsZjtcblx0XHRcdGNvbnN0IHt1cmwsIGhlYWRlcnMsIHJhd30gPSBwcm94eU9wdGlvbnM7XG5cblx0XHRcdGNvbnN0IHN0cmVhbSA9IGF3YWl0IGdsb2JhbEFnZW50LnJlcXVlc3QodXJsLCBwcm94eU9wdGlvbnMsIHtcblx0XHRcdFx0Li4uZ2V0QXV0aG9yaXphdGlvbkhlYWRlcnMoc2VsZiksXG5cdFx0XHRcdC4uLmhlYWRlcnMsXG5cdFx0XHRcdCc6bWV0aG9kJzogJ0NPTk5FQ1QnLFxuXHRcdFx0XHQnOmF1dGhvcml0eSc6IGAke29wdGlvbnMuaG9zdH06JHtvcHRpb25zLnBvcnR9YFxuXHRcdFx0fSk7XG5cblx0XHRcdHN0cmVhbS5vbmNlKCdlcnJvcicsIGNhbGxiYWNrKTtcblx0XHRcdHN0cmVhbS5vbmNlKCdyZXNwb25zZScsIGhlYWRlcnMgPT4ge1xuXHRcdFx0XHRjb25zdCBzdGF0dXNDb2RlID0gaGVhZGVyc1snOnN0YXR1cyddO1xuXG5cdFx0XHRcdGlmIChzdGF0dXNDb2RlICE9PSAyMDApIHtcblx0XHRcdFx0XHRjYWxsYmFjayhuZXcgVW5leHBlY3RlZFN0YXR1c0NvZGVFcnJvcihzdGF0dXNDb2RlLCAnJykpO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGNvbnN0IGVuY3J5cHRlZCA9IHNlbGYgaW5zdGFuY2VvZiBodHRwcy5BZ2VudDtcblxuXHRcdFx0XHRpZiAocmF3ICYmIGVuY3J5cHRlZCkge1xuXHRcdFx0XHRcdG9wdGlvbnMuc29ja2V0ID0gc3RyZWFtO1xuXHRcdFx0XHRcdGNvbnN0IHNlY3VyZVN0cmVhbSA9IHRscy5jb25uZWN0KG9wdGlvbnMpO1xuXG5cdFx0XHRcdFx0c2VjdXJlU3RyZWFtLm9uY2UoJ2Nsb3NlJywgKCkgPT4ge1xuXHRcdFx0XHRcdFx0c3RyZWFtLmRlc3Ryb3koKTtcblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdGNhbGxiYWNrKG51bGwsIHNlY3VyZVN0cmVhbSk7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y29uc3Qgc29ja2V0ID0gbmV3IEpTU3RyZWFtU29ja2V0KHN0cmVhbSk7XG5cdFx0XHRcdHNvY2tldC5lbmNyeXB0ZWQgPSBmYWxzZTtcblx0XHRcdFx0c29ja2V0Ll9oYW5kbGUuZ2V0cGVlcm5hbWUgPSBvdXQgPT4ge1xuXHRcdFx0XHRcdG91dC5mYW1pbHkgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0b3V0LmFkZHJlc3MgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0b3V0LnBvcnQgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0Y2FsbGJhY2sobnVsbCwgc29ja2V0KTtcblx0XHRcdH0pO1xuXHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRjYWxsYmFjayhlcnJvcik7XG5cdFx0fVxuXHR9KSgpO1xufTtcblxuY2xhc3MgSHR0cE92ZXJIdHRwMiBleHRlbmRzIGh0dHAuQWdlbnQge1xuXHRjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG5cdFx0c3VwZXIob3B0aW9ucyk7XG5cblx0XHRpbml0aWFsaXplKHRoaXMsIG9wdGlvbnMucHJveHlPcHRpb25zKTtcblx0fVxuXG5cdGNyZWF0ZUNvbm5lY3Rpb24ob3B0aW9ucywgY2FsbGJhY2spIHtcblx0XHRjcmVhdGVDb25uZWN0aW9uKHRoaXMsIG9wdGlvbnMsIGNhbGxiYWNrKTtcblx0fVxufVxuXG5jbGFzcyBIdHRwc092ZXJIdHRwMiBleHRlbmRzIGh0dHBzLkFnZW50IHtcblx0Y29uc3RydWN0b3Iob3B0aW9ucykge1xuXHRcdHN1cGVyKG9wdGlvbnMpO1xuXG5cdFx0aW5pdGlhbGl6ZSh0aGlzLCBvcHRpb25zLnByb3h5T3B0aW9ucyk7XG5cdH1cblxuXHRjcmVhdGVDb25uZWN0aW9uKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG5cdFx0Y3JlYXRlQ29ubmVjdGlvbih0aGlzLCBvcHRpb25zLCBjYWxsYmFjayk7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdEh0dHBPdmVySHR0cDIsXG5cdEh0dHBzT3Zlckh0dHAyXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/proxies/h1-over-h2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-h1.js":
/*!*****************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/proxies/h2-over-h1.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst Http2OverHttpX = __webpack_require__(/*! ./h2-over-hx.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-hx.js\");\nconst getAuthorizationHeaders = __webpack_require__(/*! ./get-auth-headers.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/get-auth-headers.js\");\n\nconst getStream = request => new Promise((resolve, reject) => {\n\tconst onConnect = (response, socket, head) => {\n\t\tsocket.unshift(head);\n\n\t\trequest.off('error', reject);\n\t\tresolve([socket, response.statusCode, response.statusMessage]);\n\t};\n\n\trequest.once('error', reject);\n\trequest.once('connect', onConnect);\n});\n\nclass Http2OverHttp extends Http2OverHttpX {\n\tasync _getProxyStream(authority) {\n\t\tconst {proxyOptions} = this;\n\t\tconst {url, headers} = this.proxyOptions;\n\n\t\tconst network = url.protocol === 'https:' ? https : http;\n\n\t\t// `new URL('https://localhost/httpbin.org:443')` results in\n\t\t// a `/httpbin.org:443` path, which has an invalid leading slash.\n\t\tconst request = network.request({\n\t\t\t...proxyOptions,\n\t\t\thostname: url.hostname,\n\t\t\tport: url.port,\n\t\t\tpath: authority,\n\t\t\theaders: {\n\t\t\t\t...getAuthorizationHeaders(this),\n\t\t\t\t...headers,\n\t\t\t\thost: authority\n\t\t\t},\n\t\t\tmethod: 'CONNECT'\n\t\t}).end();\n\n\t\treturn getStream(request);\n\t}\n}\n\nmodule.exports = {\n\tHttp2OverHttp,\n\tHttp2OverHttps: Http2OverHttp\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy9oMi1vdmVyLWgxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsYUFBYSxtQkFBTyxDQUFDLGtCQUFNO0FBQzNCLGNBQWMsbUJBQU8sQ0FBQyxvQkFBTztBQUM3Qix1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBaUI7QUFDaEQsZ0NBQWdDLG1CQUFPLENBQUMsb0dBQXVCOztBQUUvRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQSxTQUFTLGNBQWM7QUFDdkIsU0FBUyxjQUFjOztBQUV2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmZtLWJvdC8uL25vZGVfbW9kdWxlcy9odHRwMi13cmFwcGVyL3NvdXJjZS9wcm94aWVzL2gyLW92ZXItaDEuanM/MmY1NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xuY29uc3QgaHR0cHMgPSByZXF1aXJlKCdodHRwcycpO1xuY29uc3QgSHR0cDJPdmVySHR0cFggPSByZXF1aXJlKCcuL2gyLW92ZXItaHguanMnKTtcbmNvbnN0IGdldEF1dGhvcml6YXRpb25IZWFkZXJzID0gcmVxdWlyZSgnLi9nZXQtYXV0aC1oZWFkZXJzLmpzJyk7XG5cbmNvbnN0IGdldFN0cmVhbSA9IHJlcXVlc3QgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRjb25zdCBvbkNvbm5lY3QgPSAocmVzcG9uc2UsIHNvY2tldCwgaGVhZCkgPT4ge1xuXHRcdHNvY2tldC51bnNoaWZ0KGhlYWQpO1xuXG5cdFx0cmVxdWVzdC5vZmYoJ2Vycm9yJywgcmVqZWN0KTtcblx0XHRyZXNvbHZlKFtzb2NrZXQsIHJlc3BvbnNlLnN0YXR1c0NvZGUsIHJlc3BvbnNlLnN0YXR1c01lc3NhZ2VdKTtcblx0fTtcblxuXHRyZXF1ZXN0Lm9uY2UoJ2Vycm9yJywgcmVqZWN0KTtcblx0cmVxdWVzdC5vbmNlKCdjb25uZWN0Jywgb25Db25uZWN0KTtcbn0pO1xuXG5jbGFzcyBIdHRwMk92ZXJIdHRwIGV4dGVuZHMgSHR0cDJPdmVySHR0cFgge1xuXHRhc3luYyBfZ2V0UHJveHlTdHJlYW0oYXV0aG9yaXR5KSB7XG5cdFx0Y29uc3Qge3Byb3h5T3B0aW9uc30gPSB0aGlzO1xuXHRcdGNvbnN0IHt1cmwsIGhlYWRlcnN9ID0gdGhpcy5wcm94eU9wdGlvbnM7XG5cblx0XHRjb25zdCBuZXR3b3JrID0gdXJsLnByb3RvY29sID09PSAnaHR0cHM6JyA/IGh0dHBzIDogaHR0cDtcblxuXHRcdC8vIGBuZXcgVVJMKCdodHRwczovL2xvY2FsaG9zdC9odHRwYmluLm9yZzo0NDMnKWAgcmVzdWx0cyBpblxuXHRcdC8vIGEgYC9odHRwYmluLm9yZzo0NDNgIHBhdGgsIHdoaWNoIGhhcyBhbiBpbnZhbGlkIGxlYWRpbmcgc2xhc2guXG5cdFx0Y29uc3QgcmVxdWVzdCA9IG5ldHdvcmsucmVxdWVzdCh7XG5cdFx0XHQuLi5wcm94eU9wdGlvbnMsXG5cdFx0XHRob3N0bmFtZTogdXJsLmhvc3RuYW1lLFxuXHRcdFx0cG9ydDogdXJsLnBvcnQsXG5cdFx0XHRwYXRoOiBhdXRob3JpdHksXG5cdFx0XHRoZWFkZXJzOiB7XG5cdFx0XHRcdC4uLmdldEF1dGhvcml6YXRpb25IZWFkZXJzKHRoaXMpLFxuXHRcdFx0XHQuLi5oZWFkZXJzLFxuXHRcdFx0XHRob3N0OiBhdXRob3JpdHlcblx0XHRcdH0sXG5cdFx0XHRtZXRob2Q6ICdDT05ORUNUJ1xuXHRcdH0pLmVuZCgpO1xuXG5cdFx0cmV0dXJuIGdldFN0cmVhbShyZXF1ZXN0KTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0SHR0cDJPdmVySHR0cCxcblx0SHR0cDJPdmVySHR0cHM6IEh0dHAyT3Zlckh0dHBcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-h1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-h2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/proxies/h2-over-h2.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst {globalAgent} = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/http2-wrapper/source/agent.js\");\nconst Http2OverHttpX = __webpack_require__(/*! ./h2-over-hx.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-hx.js\");\nconst getAuthorizationHeaders = __webpack_require__(/*! ./get-auth-headers.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/get-auth-headers.js\");\n\nconst getStatusCode = stream => new Promise((resolve, reject) => {\n\tstream.once('error', reject);\n\tstream.once('response', headers => {\n\t\tstream.off('error', reject);\n\t\tresolve(headers[':status']);\n\t});\n});\n\nclass Http2OverHttp2 extends Http2OverHttpX {\n\tasync _getProxyStream(authority) {\n\t\tconst {proxyOptions} = this;\n\n\t\tconst headers = {\n\t\t\t...getAuthorizationHeaders(this),\n\t\t\t...proxyOptions.headers,\n\t\t\t':method': 'CONNECT',\n\t\t\t':authority': authority\n\t\t};\n\n\t\tconst stream = await globalAgent.request(proxyOptions.url, proxyOptions, headers);\n\t\tconst statusCode = await getStatusCode(stream);\n\n\t\treturn [stream, statusCode, ''];\n\t}\n}\n\nmodule.exports = Http2OverHttp2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy9oMi1vdmVyLWgyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsT0FBTyxhQUFhLEVBQUUsbUJBQU8sQ0FBQyx1RUFBYTtBQUMzQyx1QkFBdUIsbUJBQU8sQ0FBQyx3RkFBaUI7QUFDaEQsZ0NBQWdDLG1CQUFPLENBQUMsb0dBQXVCOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGLENBQUM7O0FBRUQ7QUFDQTtBQUNBLFNBQVMsY0FBYzs7QUFFdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG5mbS1ib3QvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy9oMi1vdmVyLWgyLmpzPzlkNTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge2dsb2JhbEFnZW50fSA9IHJlcXVpcmUoJy4uL2FnZW50LmpzJyk7XG5jb25zdCBIdHRwMk92ZXJIdHRwWCA9IHJlcXVpcmUoJy4vaDItb3Zlci1oeC5qcycpO1xuY29uc3QgZ2V0QXV0aG9yaXphdGlvbkhlYWRlcnMgPSByZXF1aXJlKCcuL2dldC1hdXRoLWhlYWRlcnMuanMnKTtcblxuY29uc3QgZ2V0U3RhdHVzQ29kZSA9IHN0cmVhbSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdHN0cmVhbS5vbmNlKCdlcnJvcicsIHJlamVjdCk7XG5cdHN0cmVhbS5vbmNlKCdyZXNwb25zZScsIGhlYWRlcnMgPT4ge1xuXHRcdHN0cmVhbS5vZmYoJ2Vycm9yJywgcmVqZWN0KTtcblx0XHRyZXNvbHZlKGhlYWRlcnNbJzpzdGF0dXMnXSk7XG5cdH0pO1xufSk7XG5cbmNsYXNzIEh0dHAyT3Zlckh0dHAyIGV4dGVuZHMgSHR0cDJPdmVySHR0cFgge1xuXHRhc3luYyBfZ2V0UHJveHlTdHJlYW0oYXV0aG9yaXR5KSB7XG5cdFx0Y29uc3Qge3Byb3h5T3B0aW9uc30gPSB0aGlzO1xuXG5cdFx0Y29uc3QgaGVhZGVycyA9IHtcblx0XHRcdC4uLmdldEF1dGhvcml6YXRpb25IZWFkZXJzKHRoaXMpLFxuXHRcdFx0Li4ucHJveHlPcHRpb25zLmhlYWRlcnMsXG5cdFx0XHQnOm1ldGhvZCc6ICdDT05ORUNUJyxcblx0XHRcdCc6YXV0aG9yaXR5JzogYXV0aG9yaXR5XG5cdFx0fTtcblxuXHRcdGNvbnN0IHN0cmVhbSA9IGF3YWl0IGdsb2JhbEFnZW50LnJlcXVlc3QocHJveHlPcHRpb25zLnVybCwgcHJveHlPcHRpb25zLCBoZWFkZXJzKTtcblx0XHRjb25zdCBzdGF0dXNDb2RlID0gYXdhaXQgZ2V0U3RhdHVzQ29kZShzdHJlYW0pO1xuXG5cdFx0cmV0dXJuIFtzdHJlYW0sIHN0YXR1c0NvZGUsICcnXTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEh0dHAyT3Zlckh0dHAyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-h2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-hx.js":
/*!*****************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/proxies/h2-over-hx.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst {Agent} = __webpack_require__(/*! ../agent.js */ \"(rsc)/./node_modules/http2-wrapper/source/agent.js\");\nconst JSStreamSocket = __webpack_require__(/*! ../utils/js-stream-socket.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/js-stream-socket.js\");\nconst UnexpectedStatusCodeError = __webpack_require__(/*! ./unexpected-status-code-error.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/unexpected-status-code-error.js\");\nconst initialize = __webpack_require__(/*! ./initialize.js */ \"(rsc)/./node_modules/http2-wrapper/source/proxies/initialize.js\");\n\nclass Http2OverHttpX extends Agent {\n\tconstructor(options) {\n\t\tsuper(options);\n\n\t\tinitialize(this, options.proxyOptions);\n\t}\n\n\tasync createConnection(origin, options) {\n\t\tconst authority = `${origin.hostname}:${origin.port || 443}`;\n\n\t\tconst [stream, statusCode, statusMessage] = await this._getProxyStream(authority);\n\t\tif (statusCode !== 200) {\n\t\t\tthrow new UnexpectedStatusCodeError(statusCode, statusMessage);\n\t\t}\n\n\t\tif (this.proxyOptions.raw) {\n\t\t\toptions.socket = stream;\n\t\t} else {\n\t\t\tconst socket = new JSStreamSocket(stream);\n\t\t\tsocket.encrypted = false;\n\t\t\tsocket._handle.getpeername = out => {\n\t\t\t\tout.family = undefined;\n\t\t\t\tout.address = undefined;\n\t\t\t\tout.port = undefined;\n\t\t\t};\n\n\t\t\treturn socket;\n\t\t}\n\n\t\treturn super.createConnection(origin, options);\n\t}\n}\n\nmodule.exports = Http2OverHttpX;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy9oMi1vdmVyLWh4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsT0FBTyxPQUFPLEVBQUUsbUJBQU8sQ0FBQyx1RUFBYTtBQUNyQyx1QkFBdUIsbUJBQU8sQ0FBQyx5R0FBOEI7QUFDN0Qsa0NBQWtDLG1CQUFPLENBQUMsNEhBQW1DO0FBQzdFLG1CQUFtQixtQkFBTyxDQUFDLHdGQUFpQjs7QUFFNUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUIsZ0JBQWdCLEdBQUcsbUJBQW1COztBQUU3RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG5mbS1ib3QvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy9oMi1vdmVyLWh4LmpzP2NhNzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge0FnZW50fSA9IHJlcXVpcmUoJy4uL2FnZW50LmpzJyk7XG5jb25zdCBKU1N0cmVhbVNvY2tldCA9IHJlcXVpcmUoJy4uL3V0aWxzL2pzLXN0cmVhbS1zb2NrZXQuanMnKTtcbmNvbnN0IFVuZXhwZWN0ZWRTdGF0dXNDb2RlRXJyb3IgPSByZXF1aXJlKCcuL3VuZXhwZWN0ZWQtc3RhdHVzLWNvZGUtZXJyb3IuanMnKTtcbmNvbnN0IGluaXRpYWxpemUgPSByZXF1aXJlKCcuL2luaXRpYWxpemUuanMnKTtcblxuY2xhc3MgSHR0cDJPdmVySHR0cFggZXh0ZW5kcyBBZ2VudCB7XG5cdGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcblx0XHRzdXBlcihvcHRpb25zKTtcblxuXHRcdGluaXRpYWxpemUodGhpcywgb3B0aW9ucy5wcm94eU9wdGlvbnMpO1xuXHR9XG5cblx0YXN5bmMgY3JlYXRlQ29ubmVjdGlvbihvcmlnaW4sIG9wdGlvbnMpIHtcblx0XHRjb25zdCBhdXRob3JpdHkgPSBgJHtvcmlnaW4uaG9zdG5hbWV9OiR7b3JpZ2luLnBvcnQgfHwgNDQzfWA7XG5cblx0XHRjb25zdCBbc3RyZWFtLCBzdGF0dXNDb2RlLCBzdGF0dXNNZXNzYWdlXSA9IGF3YWl0IHRoaXMuX2dldFByb3h5U3RyZWFtKGF1dGhvcml0eSk7XG5cdFx0aWYgKHN0YXR1c0NvZGUgIT09IDIwMCkge1xuXHRcdFx0dGhyb3cgbmV3IFVuZXhwZWN0ZWRTdGF0dXNDb2RlRXJyb3Ioc3RhdHVzQ29kZSwgc3RhdHVzTWVzc2FnZSk7XG5cdFx0fVxuXG5cdFx0aWYgKHRoaXMucHJveHlPcHRpb25zLnJhdykge1xuXHRcdFx0b3B0aW9ucy5zb2NrZXQgPSBzdHJlYW07XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnN0IHNvY2tldCA9IG5ldyBKU1N0cmVhbVNvY2tldChzdHJlYW0pO1xuXHRcdFx0c29ja2V0LmVuY3J5cHRlZCA9IGZhbHNlO1xuXHRcdFx0c29ja2V0Ll9oYW5kbGUuZ2V0cGVlcm5hbWUgPSBvdXQgPT4ge1xuXHRcdFx0XHRvdXQuZmFtaWx5ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRvdXQuYWRkcmVzcyA9IHVuZGVmaW5lZDtcblx0XHRcdFx0b3V0LnBvcnQgPSB1bmRlZmluZWQ7XG5cdFx0XHR9O1xuXG5cdFx0XHRyZXR1cm4gc29ja2V0O1xuXHRcdH1cblxuXHRcdHJldHVybiBzdXBlci5jcmVhdGVDb25uZWN0aW9uKG9yaWdpbiwgb3B0aW9ucyk7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBIdHRwMk92ZXJIdHRwWDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/proxies/h2-over-hx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/proxies/initialize.js":
/*!*****************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/proxies/initialize.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// See https://github.com/facebook/jest/issues/2549\n// eslint-disable-next-line node/prefer-global/url\nconst {URL} = __webpack_require__(/*! url */ \"url\");\nconst checkType = __webpack_require__(/*! ../utils/check-type.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/check-type.js\");\n\nmodule.exports = (self, proxyOptions) => {\n\tcheckType('proxyOptions', proxyOptions, ['object']);\n\tcheckType('proxyOptions.headers', proxyOptions.headers, ['object', 'undefined']);\n\tcheckType('proxyOptions.raw', proxyOptions.raw, ['boolean', 'undefined']);\n\tcheckType('proxyOptions.url', proxyOptions.url, [URL, 'string']);\n\n\tconst url = new URL(proxyOptions.url);\n\n\tself.proxyOptions = {\n\t\traw: true,\n\t\t...proxyOptions,\n\t\theaders: {...proxyOptions.headers},\n\t\turl\n\t};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy9pbml0aWFsaXplLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLE9BQU8sS0FBSyxFQUFFLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0Isa0JBQWtCLG1CQUFPLENBQUMsNkZBQXdCOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0JBQXdCO0FBQ3BDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RuZm0tYm90Ly4vbm9kZV9tb2R1bGVzL2h0dHAyLXdyYXBwZXIvc291cmNlL3Byb3hpZXMvaW5pdGlhbGl6ZS5qcz80Y2U2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svamVzdC9pc3N1ZXMvMjU0OVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vZGUvcHJlZmVyLWdsb2JhbC91cmxcbmNvbnN0IHtVUkx9ID0gcmVxdWlyZSgndXJsJyk7XG5jb25zdCBjaGVja1R5cGUgPSByZXF1aXJlKCcuLi91dGlscy9jaGVjay10eXBlLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHNlbGYsIHByb3h5T3B0aW9ucykgPT4ge1xuXHRjaGVja1R5cGUoJ3Byb3h5T3B0aW9ucycsIHByb3h5T3B0aW9ucywgWydvYmplY3QnXSk7XG5cdGNoZWNrVHlwZSgncHJveHlPcHRpb25zLmhlYWRlcnMnLCBwcm94eU9wdGlvbnMuaGVhZGVycywgWydvYmplY3QnLCAndW5kZWZpbmVkJ10pO1xuXHRjaGVja1R5cGUoJ3Byb3h5T3B0aW9ucy5yYXcnLCBwcm94eU9wdGlvbnMucmF3LCBbJ2Jvb2xlYW4nLCAndW5kZWZpbmVkJ10pO1xuXHRjaGVja1R5cGUoJ3Byb3h5T3B0aW9ucy51cmwnLCBwcm94eU9wdGlvbnMudXJsLCBbVVJMLCAnc3RyaW5nJ10pO1xuXG5cdGNvbnN0IHVybCA9IG5ldyBVUkwocHJveHlPcHRpb25zLnVybCk7XG5cblx0c2VsZi5wcm94eU9wdGlvbnMgPSB7XG5cdFx0cmF3OiB0cnVlLFxuXHRcdC4uLnByb3h5T3B0aW9ucyxcblx0XHRoZWFkZXJzOiB7Li4ucHJveHlPcHRpb25zLmhlYWRlcnN9LFxuXHRcdHVybFxuXHR9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/proxies/initialize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/proxies/unexpected-status-code-error.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/proxies/unexpected-status-code-error.js ***!
  \***********************************************************************************/
/***/ ((module) => {

eval("\n\nclass UnexpectedStatusCodeError extends Error {\n\tconstructor(statusCode, statusMessage = '') {\n\t\tsuper(`The proxy server rejected the request with status code ${statusCode} (${statusMessage || 'empty status message'})`);\n\t\tthis.statusCode = statusCode;\n\t\tthis.statusMessage = statusMessage;\n\t}\n}\n\nmodule.exports = UnexpectedStatusCodeError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvcHJveGllcy91bmV4cGVjdGVkLXN0YXR1cy1jb2RlLWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxrRUFBa0UsWUFBWSxHQUFHLHdDQUF3QztBQUN6SDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RuZm0tYm90Ly4vbm9kZV9tb2R1bGVzL2h0dHAyLXdyYXBwZXIvc291cmNlL3Byb3hpZXMvdW5leHBlY3RlZC1zdGF0dXMtY29kZS1lcnJvci5qcz81OGJjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY2xhc3MgVW5leHBlY3RlZFN0YXR1c0NvZGVFcnJvciBleHRlbmRzIEVycm9yIHtcblx0Y29uc3RydWN0b3Ioc3RhdHVzQ29kZSwgc3RhdHVzTWVzc2FnZSA9ICcnKSB7XG5cdFx0c3VwZXIoYFRoZSBwcm94eSBzZXJ2ZXIgcmVqZWN0ZWQgdGhlIHJlcXVlc3Qgd2l0aCBzdGF0dXMgY29kZSAke3N0YXR1c0NvZGV9ICgke3N0YXR1c01lc3NhZ2UgfHwgJ2VtcHR5IHN0YXR1cyBtZXNzYWdlJ30pYCk7XG5cdFx0dGhpcy5zdGF0dXNDb2RlID0gc3RhdHVzQ29kZTtcblx0XHR0aGlzLnN0YXR1c01lc3NhZ2UgPSBzdGF0dXNNZXNzYWdlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVW5leHBlY3RlZFN0YXR1c0NvZGVFcnJvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/proxies/unexpected-status-code-error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/calculate-server-name.js":
/*!**************************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/calculate-server-name.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst {isIP} = __webpack_require__(/*! net */ \"net\");\nconst assert = __webpack_require__(/*! assert */ \"assert\");\n\nconst getHost = host => {\n\tif (host[0] === '[') {\n\t\tconst idx = host.indexOf(']');\n\n\t\tassert(idx !== -1);\n\t\treturn host.slice(1, idx);\n\t}\n\n\tconst idx = host.indexOf(':');\n\tif (idx === -1) {\n\t\treturn host;\n\t}\n\n\treturn host.slice(0, idx);\n};\n\nmodule.exports = host => {\n\tconst servername = getHost(host);\n\n\tif (isIP(servername)) {\n\t\treturn '';\n\t}\n\n\treturn servername;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvY2FsY3VsYXRlLXNlcnZlci1uYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsT0FBTyxNQUFNLEVBQUUsbUJBQU8sQ0FBQyxnQkFBSztBQUM1QixlQUFlLG1CQUFPLENBQUMsc0JBQVE7O0FBRS9CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG5mbS1ib3QvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvY2FsY3VsYXRlLXNlcnZlci1uYW1lLmpzP2M2NDciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge2lzSVB9ID0gcmVxdWlyZSgnbmV0Jyk7XG5jb25zdCBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcblxuY29uc3QgZ2V0SG9zdCA9IGhvc3QgPT4ge1xuXHRpZiAoaG9zdFswXSA9PT0gJ1snKSB7XG5cdFx0Y29uc3QgaWR4ID0gaG9zdC5pbmRleE9mKCddJyk7XG5cblx0XHRhc3NlcnQoaWR4ICE9PSAtMSk7XG5cdFx0cmV0dXJuIGhvc3Quc2xpY2UoMSwgaWR4KTtcblx0fVxuXG5cdGNvbnN0IGlkeCA9IGhvc3QuaW5kZXhPZignOicpO1xuXHRpZiAoaWR4ID09PSAtMSkge1xuXHRcdHJldHVybiBob3N0O1xuXHR9XG5cblx0cmV0dXJuIGhvc3Quc2xpY2UoMCwgaWR4KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaG9zdCA9PiB7XG5cdGNvbnN0IHNlcnZlcm5hbWUgPSBnZXRIb3N0KGhvc3QpO1xuXG5cdGlmIChpc0lQKHNlcnZlcm5hbWUpKSB7XG5cdFx0cmV0dXJuICcnO1xuXHR9XG5cblx0cmV0dXJuIHNlcnZlcm5hbWU7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/calculate-server-name.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/check-type.js":
/*!***************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/check-type.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\nconst checkType = (name, value, types) => {\n\tconst valid = types.some(type => {\n\t\tconst typeofType = typeof type;\n\t\tif (typeofType === 'string') {\n\t\t\treturn typeof value === type;\n\t\t}\n\n\t\treturn value instanceof type;\n\t});\n\n\tif (!valid) {\n\t\tconst names = types.map(type => typeof type === 'string' ? type : type.name);\n\n\t\tthrow new TypeError(`Expected '${name}' to be a type of ${names.join(' or ')}, got ${typeof value}`);\n\t}\n};\n\nmodule.exports = checkType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvY2hlY2stdHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFOztBQUVGO0FBQ0E7O0FBRUEsbUNBQW1DLEtBQUssb0JBQW9CLG1CQUFtQixRQUFRLGFBQWE7QUFDcEc7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RuZm0tYm90Ly4vbm9kZV9tb2R1bGVzL2h0dHAyLXdyYXBwZXIvc291cmNlL3V0aWxzL2NoZWNrLXR5cGUuanM/NDRhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNoZWNrVHlwZSA9IChuYW1lLCB2YWx1ZSwgdHlwZXMpID0+IHtcblx0Y29uc3QgdmFsaWQgPSB0eXBlcy5zb21lKHR5cGUgPT4ge1xuXHRcdGNvbnN0IHR5cGVvZlR5cGUgPSB0eXBlb2YgdHlwZTtcblx0XHRpZiAodHlwZW9mVHlwZSA9PT0gJ3N0cmluZycpIHtcblx0XHRcdHJldHVybiB0eXBlb2YgdmFsdWUgPT09IHR5cGU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgdHlwZTtcblx0fSk7XG5cblx0aWYgKCF2YWxpZCkge1xuXHRcdGNvbnN0IG5hbWVzID0gdHlwZXMubWFwKHR5cGUgPT4gdHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnID8gdHlwZSA6IHR5cGUubmFtZSk7XG5cblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCAnJHtuYW1lfScgdG8gYmUgYSB0eXBlIG9mICR7bmFtZXMuam9pbignIG9yICcpfSwgZ290ICR7dHlwZW9mIHZhbHVlfWApO1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNoZWNrVHlwZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/check-type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/delay-async-destroy.js":
/*!************************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/delay-async-destroy.js ***!
  \************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = stream => {\n\tif (stream.listenerCount('error') !== 0) {\n\t\treturn stream;\n\t}\n\n\tstream.__destroy = stream._destroy;\n\tstream._destroy = (...args) => {\n\t\tconst callback = args.pop();\n\n\t\tstream.__destroy(...args, async error => {\n\t\t\tawait Promise.resolve();\n\t\t\tcallback(error);\n\t\t});\n\t};\n\n\tconst onError = error => {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tPromise.resolve().then(() => {\n\t\t\tstream.emit('error', error);\n\t\t});\n\t};\n\n\tstream.once('error', onError);\n\n\t// eslint-disable-next-line promise/prefer-await-to-then\n\tPromise.resolve().then(() => {\n\t\tstream.off('error', onError);\n\t});\n\n\treturn stream;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvZGVsYXktYXN5bmMtZGVzdHJveS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RuZm0tYm90Ly4vbm9kZV9tb2R1bGVzL2h0dHAyLXdyYXBwZXIvc291cmNlL3V0aWxzL2RlbGF5LWFzeW5jLWRlc3Ryb3kuanM/Njc4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyZWFtID0+IHtcblx0aWYgKHN0cmVhbS5saXN0ZW5lckNvdW50KCdlcnJvcicpICE9PSAwKSB7XG5cdFx0cmV0dXJuIHN0cmVhbTtcblx0fVxuXG5cdHN0cmVhbS5fX2Rlc3Ryb3kgPSBzdHJlYW0uX2Rlc3Ryb3k7XG5cdHN0cmVhbS5fZGVzdHJveSA9ICguLi5hcmdzKSA9PiB7XG5cdFx0Y29uc3QgY2FsbGJhY2sgPSBhcmdzLnBvcCgpO1xuXG5cdFx0c3RyZWFtLl9fZGVzdHJveSguLi5hcmdzLCBhc3luYyBlcnJvciA9PiB7XG5cdFx0XHRhd2FpdCBQcm9taXNlLnJlc29sdmUoKTtcblx0XHRcdGNhbGxiYWNrKGVycm9yKTtcblx0XHR9KTtcblx0fTtcblxuXHRjb25zdCBvbkVycm9yID0gZXJyb3IgPT4ge1xuXHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcm9taXNlL3ByZWZlci1hd2FpdC10by10aGVuXG5cdFx0UHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKSA9PiB7XG5cdFx0XHRzdHJlYW0uZW1pdCgnZXJyb3InLCBlcnJvcik7XG5cdFx0fSk7XG5cdH07XG5cblx0c3RyZWFtLm9uY2UoJ2Vycm9yJywgb25FcnJvcik7XG5cblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByb21pc2UvcHJlZmVyLWF3YWl0LXRvLXRoZW5cblx0UHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKSA9PiB7XG5cdFx0c3RyZWFtLm9mZignZXJyb3InLCBvbkVycm9yKTtcblx0fSk7XG5cblx0cmV0dXJuIHN0cmVhbTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/delay-async-destroy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/errors.js":
/*!***********************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/errors.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("\n/* istanbul ignore file: https://github.com/nodejs/node/blob/master/lib/internal/errors.js */\n\nconst makeError = (Base, key, getMessage) => {\n\tmodule.exports[key] = class NodeError extends Base {\n\t\tconstructor(...args) {\n\t\t\tsuper(typeof getMessage === 'string' ? getMessage : getMessage(args));\n\t\t\tthis.name = `${super.name} [${key}]`;\n\t\t\tthis.code = key;\n\t\t}\n\t};\n};\n\nmakeError(TypeError, 'ERR_INVALID_ARG_TYPE', args => {\n\tconst type = args[0].includes('.') ? 'property' : 'argument';\n\n\tlet valid = args[1];\n\tconst isManyTypes = Array.isArray(valid);\n\n\tif (isManyTypes) {\n\t\tvalid = `${valid.slice(0, -1).join(', ')} or ${valid.slice(-1)}`;\n\t}\n\n\treturn `The \"${args[0]}\" ${type} must be ${isManyTypes ? 'one of' : 'of'} type ${valid}. Received ${typeof args[2]}`;\n});\n\nmakeError(TypeError, 'ERR_INVALID_PROTOCOL', args =>\n\t`Protocol \"${args[0]}\" not supported. Expected \"${args[1]}\"`\n);\n\nmakeError(Error, 'ERR_HTTP_HEADERS_SENT', args =>\n\t`Cannot ${args[0]} headers after they are sent to the client`\n);\n\nmakeError(TypeError, 'ERR_INVALID_HTTP_TOKEN', args =>\n\t`${args[0]} must be a valid HTTP token [${args[1]}]`\n);\n\nmakeError(TypeError, 'ERR_HTTP_INVALID_HEADER_VALUE', args =>\n\t`Invalid value \"${args[0]} for header \"${args[1]}\"`\n);\n\nmakeError(TypeError, 'ERR_INVALID_CHAR', args =>\n\t`Invalid character in ${args[0]} [${args[1]}]`\n);\n\nmakeError(\n\tError,\n\t'ERR_HTTP2_NO_SOCKET_MANIPULATION',\n\t'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWSxHQUFHLElBQUk7QUFDckM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSwrQkFBK0IsS0FBSyxnQkFBZ0I7QUFDakU7O0FBRUEsZ0JBQWdCLFFBQVEsSUFBSSxNQUFNLFVBQVUsK0JBQStCLE9BQU8sTUFBTSxhQUFhLGVBQWU7QUFDcEgsQ0FBQzs7QUFFRDtBQUNBLGNBQWMsUUFBUSw2QkFBNkIsUUFBUTtBQUMzRDs7QUFFQTtBQUNBLFdBQVcsU0FBUztBQUNwQjs7QUFFQTtBQUNBLElBQUksU0FBUyw4QkFBOEIsUUFBUTtBQUNuRDs7QUFFQTtBQUNBLG1CQUFtQixTQUFTLGNBQWMsUUFBUTtBQUNsRDs7QUFFQTtBQUNBLHlCQUF5QixTQUFTLEdBQUcsUUFBUTtBQUM3Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG5mbS1ib3QvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvZXJyb3JzLmpzP2E3NmYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLyogaXN0YW5idWwgaWdub3JlIGZpbGU6IGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9ibG9iL21hc3Rlci9saWIvaW50ZXJuYWwvZXJyb3JzLmpzICovXG5cbmNvbnN0IG1ha2VFcnJvciA9IChCYXNlLCBrZXksIGdldE1lc3NhZ2UpID0+IHtcblx0bW9kdWxlLmV4cG9ydHNba2V5XSA9IGNsYXNzIE5vZGVFcnJvciBleHRlbmRzIEJhc2Uge1xuXHRcdGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcblx0XHRcdHN1cGVyKHR5cGVvZiBnZXRNZXNzYWdlID09PSAnc3RyaW5nJyA/IGdldE1lc3NhZ2UgOiBnZXRNZXNzYWdlKGFyZ3MpKTtcblx0XHRcdHRoaXMubmFtZSA9IGAke3N1cGVyLm5hbWV9IFske2tleX1dYDtcblx0XHRcdHRoaXMuY29kZSA9IGtleTtcblx0XHR9XG5cdH07XG59O1xuXG5tYWtlRXJyb3IoVHlwZUVycm9yLCAnRVJSX0lOVkFMSURfQVJHX1RZUEUnLCBhcmdzID0+IHtcblx0Y29uc3QgdHlwZSA9IGFyZ3NbMF0uaW5jbHVkZXMoJy4nKSA/ICdwcm9wZXJ0eScgOiAnYXJndW1lbnQnO1xuXG5cdGxldCB2YWxpZCA9IGFyZ3NbMV07XG5cdGNvbnN0IGlzTWFueVR5cGVzID0gQXJyYXkuaXNBcnJheSh2YWxpZCk7XG5cblx0aWYgKGlzTWFueVR5cGVzKSB7XG5cdFx0dmFsaWQgPSBgJHt2YWxpZC5zbGljZSgwLCAtMSkuam9pbignLCAnKX0gb3IgJHt2YWxpZC5zbGljZSgtMSl9YDtcblx0fVxuXG5cdHJldHVybiBgVGhlIFwiJHthcmdzWzBdfVwiICR7dHlwZX0gbXVzdCBiZSAke2lzTWFueVR5cGVzID8gJ29uZSBvZicgOiAnb2YnfSB0eXBlICR7dmFsaWR9LiBSZWNlaXZlZCAke3R5cGVvZiBhcmdzWzJdfWA7XG59KTtcblxubWFrZUVycm9yKFR5cGVFcnJvciwgJ0VSUl9JTlZBTElEX1BST1RPQ09MJywgYXJncyA9PlxuXHRgUHJvdG9jb2wgXCIke2FyZ3NbMF19XCIgbm90IHN1cHBvcnRlZC4gRXhwZWN0ZWQgXCIke2FyZ3NbMV19XCJgXG4pO1xuXG5tYWtlRXJyb3IoRXJyb3IsICdFUlJfSFRUUF9IRUFERVJTX1NFTlQnLCBhcmdzID0+XG5cdGBDYW5ub3QgJHthcmdzWzBdfSBoZWFkZXJzIGFmdGVyIHRoZXkgYXJlIHNlbnQgdG8gdGhlIGNsaWVudGBcbik7XG5cbm1ha2VFcnJvcihUeXBlRXJyb3IsICdFUlJfSU5WQUxJRF9IVFRQX1RPS0VOJywgYXJncyA9PlxuXHRgJHthcmdzWzBdfSBtdXN0IGJlIGEgdmFsaWQgSFRUUCB0b2tlbiBbJHthcmdzWzFdfV1gXG4pO1xuXG5tYWtlRXJyb3IoVHlwZUVycm9yLCAnRVJSX0hUVFBfSU5WQUxJRF9IRUFERVJfVkFMVUUnLCBhcmdzID0+XG5cdGBJbnZhbGlkIHZhbHVlIFwiJHthcmdzWzBdfSBmb3IgaGVhZGVyIFwiJHthcmdzWzFdfVwiYFxuKTtcblxubWFrZUVycm9yKFR5cGVFcnJvciwgJ0VSUl9JTlZBTElEX0NIQVInLCBhcmdzID0+XG5cdGBJbnZhbGlkIGNoYXJhY3RlciBpbiAke2FyZ3NbMF19IFske2FyZ3NbMV19XWBcbik7XG5cbm1ha2VFcnJvcihcblx0RXJyb3IsXG5cdCdFUlJfSFRUUDJfTk9fU09DS0VUX01BTklQVUxBVElPTicsXG5cdCdIVFRQLzIgc29ja2V0cyBzaG91bGQgbm90IGJlIGRpcmVjdGx5IG1hbmlwdWxhdGVkIChlLmcuIHJlYWQgYW5kIHdyaXR0ZW4pJ1xuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/is-request-pseudo-header.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/is-request-pseudo-header.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = header => {\n\tswitch (header) {\n\t\tcase ':method':\n\t\tcase ':scheme':\n\t\tcase ':authority':\n\t\tcase ':path':\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvaXMtcmVxdWVzdC1wc2V1ZG8taGVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmZtLWJvdC8uL25vZGVfbW9kdWxlcy9odHRwMi13cmFwcGVyL3NvdXJjZS91dGlscy9pcy1yZXF1ZXN0LXBzZXVkby1oZWFkZXIuanM/MGJhMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gaGVhZGVyID0+IHtcblx0c3dpdGNoIChoZWFkZXIpIHtcblx0XHRjYXNlICc6bWV0aG9kJzpcblx0XHRjYXNlICc6c2NoZW1lJzpcblx0XHRjYXNlICc6YXV0aG9yaXR5Jzpcblx0XHRjYXNlICc6cGF0aCc6XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/is-request-pseudo-header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/js-stream-socket.js":
/*!*********************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/js-stream-socket.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst stream = __webpack_require__(/*! stream */ \"stream\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\n\n// Really awesome hack.\nconst JSStreamSocket = (new tls.TLSSocket(new stream.PassThrough()))._handle._parentWrap.constructor;\n\nmodule.exports = JSStreamSocket;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvanMtc3RyZWFtLXNvY2tldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGVBQWUsbUJBQU8sQ0FBQyxzQkFBUTtBQUMvQixZQUFZLG1CQUFPLENBQUMsZ0JBQUs7O0FBRXpCO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmZtLWJvdC8uL25vZGVfbW9kdWxlcy9odHRwMi13cmFwcGVyL3NvdXJjZS91dGlscy9qcy1zdHJlYW0tc29ja2V0LmpzPzRhYzIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qgc3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJyk7XG5jb25zdCB0bHMgPSByZXF1aXJlKCd0bHMnKTtcblxuLy8gUmVhbGx5IGF3ZXNvbWUgaGFjay5cbmNvbnN0IEpTU3RyZWFtU29ja2V0ID0gKG5ldyB0bHMuVExTU29ja2V0KG5ldyBzdHJlYW0uUGFzc1Rocm91Z2goKSkpLl9oYW5kbGUuX3BhcmVudFdyYXAuY29uc3RydWN0b3I7XG5cbm1vZHVsZS5leHBvcnRzID0gSlNTdHJlYW1Tb2NrZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/js-stream-socket.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/proxy-events.js":
/*!*****************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/proxy-events.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = (from, to, events) => {\n\tfor (const event of events) {\n\t\tfrom.on(event, (...args) => to.emit(event, ...args));\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvcHJveHktZXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmZtLWJvdC8uL25vZGVfbW9kdWxlcy9odHRwMi13cmFwcGVyL3NvdXJjZS91dGlscy9wcm94eS1ldmVudHMuanM/NjAyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gKGZyb20sIHRvLCBldmVudHMpID0+IHtcblx0Zm9yIChjb25zdCBldmVudCBvZiBldmVudHMpIHtcblx0XHRmcm9tLm9uKGV2ZW50LCAoLi4uYXJncykgPT4gdG8uZW1pdChldmVudCwgLi4uYXJncykpO1xuXHR9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/proxy-events.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/proxy-socket-handler.js":
/*!*************************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/proxy-socket-handler.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst {ERR_HTTP2_NO_SOCKET_MANIPULATION} = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/errors.js\");\n\n/* istanbul ignore file */\n/* https://github.com/nodejs/node/blob/6eec858f34a40ffa489c1ec54bb24da72a28c781/lib/internal/http2/compat.js#L195-L272 */\n\nconst proxySocketHandler = {\n\thas(stream, property) {\n\t\t// Replaced [kSocket] with .socket\n\t\tconst reference = stream.session === undefined ? stream : stream.session.socket;\n\t\treturn (property in stream) || (property in reference);\n\t},\n\n\tget(stream, property) {\n\t\tswitch (property) {\n\t\t\tcase 'on':\n\t\t\tcase 'once':\n\t\t\tcase 'end':\n\t\t\tcase 'emit':\n\t\t\tcase 'destroy':\n\t\t\t\treturn stream[property].bind(stream);\n\t\t\tcase 'writable':\n\t\t\tcase 'destroyed':\n\t\t\t\treturn stream[property];\n\t\t\tcase 'readable':\n\t\t\t\tif (stream.destroyed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn stream.readable;\n\t\t\tcase 'setTimeout': {\n\t\t\t\tconst {session} = stream;\n\t\t\t\tif (session !== undefined) {\n\t\t\t\t\treturn session.setTimeout.bind(session);\n\t\t\t\t}\n\n\t\t\t\treturn stream.setTimeout.bind(stream);\n\t\t\t}\n\n\t\t\tcase 'write':\n\t\t\tcase 'read':\n\t\t\tcase 'pause':\n\t\t\tcase 'resume':\n\t\t\t\tthrow new ERR_HTTP2_NO_SOCKET_MANIPULATION();\n\t\t\tdefault: {\n\t\t\t\t// Replaced [kSocket] with .socket\n\t\t\t\tconst reference = stream.session === undefined ? stream : stream.session.socket;\n\t\t\t\tconst value = reference[property];\n\n\t\t\t\treturn typeof value === 'function' ? value.bind(reference) : value;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetPrototypeOf(stream) {\n\t\tif (stream.session !== undefined) {\n\t\t\t// Replaced [kSocket] with .socket\n\t\t\treturn Reflect.getPrototypeOf(stream.session.socket);\n\t\t}\n\n\t\treturn Reflect.getPrototypeOf(stream);\n\t},\n\n\tset(stream, property, value) {\n\t\tswitch (property) {\n\t\t\tcase 'writable':\n\t\t\tcase 'readable':\n\t\t\tcase 'destroyed':\n\t\t\tcase 'on':\n\t\t\tcase 'once':\n\t\t\tcase 'end':\n\t\t\tcase 'emit':\n\t\t\tcase 'destroy':\n\t\t\t\tstream[property] = value;\n\t\t\t\treturn true;\n\t\t\tcase 'setTimeout': {\n\t\t\t\tconst {session} = stream;\n\t\t\t\tif (session === undefined) {\n\t\t\t\t\tstream.setTimeout = value;\n\t\t\t\t} else {\n\t\t\t\t\tsession.setTimeout = value;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcase 'write':\n\t\t\tcase 'read':\n\t\t\tcase 'pause':\n\t\t\tcase 'resume':\n\t\t\t\tthrow new ERR_HTTP2_NO_SOCKET_MANIPULATION();\n\t\t\tdefault: {\n\t\t\t\t// Replaced [kSocket] with .socket\n\t\t\t\tconst reference = stream.session === undefined ? stream : stream.session.socket;\n\t\t\t\treference[property] = value;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = proxySocketHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvcHJveHktc29ja2V0LWhhbmRsZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixPQUFPLGtDQUFrQyxFQUFFLG1CQUFPLENBQUMsOEVBQWE7O0FBRWhFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RuZm0tYm90Ly4vbm9kZV9tb2R1bGVzL2h0dHAyLXdyYXBwZXIvc291cmNlL3V0aWxzL3Byb3h5LXNvY2tldC1oYW5kbGVyLmpzP2JiOWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge0VSUl9IVFRQMl9OT19TT0NLRVRfTUFOSVBVTEFUSU9OfSA9IHJlcXVpcmUoJy4vZXJyb3JzLmpzJyk7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBmaWxlICovXG4vKiBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvYmxvYi82ZWVjODU4ZjM0YTQwZmZhNDg5YzFlYzU0YmIyNGRhNzJhMjhjNzgxL2xpYi9pbnRlcm5hbC9odHRwMi9jb21wYXQuanMjTDE5NS1MMjcyICovXG5cbmNvbnN0IHByb3h5U29ja2V0SGFuZGxlciA9IHtcblx0aGFzKHN0cmVhbSwgcHJvcGVydHkpIHtcblx0XHQvLyBSZXBsYWNlZCBba1NvY2tldF0gd2l0aCAuc29ja2V0XG5cdFx0Y29uc3QgcmVmZXJlbmNlID0gc3RyZWFtLnNlc3Npb24gPT09IHVuZGVmaW5lZCA/IHN0cmVhbSA6IHN0cmVhbS5zZXNzaW9uLnNvY2tldDtcblx0XHRyZXR1cm4gKHByb3BlcnR5IGluIHN0cmVhbSkgfHwgKHByb3BlcnR5IGluIHJlZmVyZW5jZSk7XG5cdH0sXG5cblx0Z2V0KHN0cmVhbSwgcHJvcGVydHkpIHtcblx0XHRzd2l0Y2ggKHByb3BlcnR5KSB7XG5cdFx0XHRjYXNlICdvbic6XG5cdFx0XHRjYXNlICdvbmNlJzpcblx0XHRcdGNhc2UgJ2VuZCc6XG5cdFx0XHRjYXNlICdlbWl0Jzpcblx0XHRcdGNhc2UgJ2Rlc3Ryb3knOlxuXHRcdFx0XHRyZXR1cm4gc3RyZWFtW3Byb3BlcnR5XS5iaW5kKHN0cmVhbSk7XG5cdFx0XHRjYXNlICd3cml0YWJsZSc6XG5cdFx0XHRjYXNlICdkZXN0cm95ZWQnOlxuXHRcdFx0XHRyZXR1cm4gc3RyZWFtW3Byb3BlcnR5XTtcblx0XHRcdGNhc2UgJ3JlYWRhYmxlJzpcblx0XHRcdFx0aWYgKHN0cmVhbS5kZXN0cm95ZWQpIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gc3RyZWFtLnJlYWRhYmxlO1xuXHRcdFx0Y2FzZSAnc2V0VGltZW91dCc6IHtcblx0XHRcdFx0Y29uc3Qge3Nlc3Npb259ID0gc3RyZWFtO1xuXHRcdFx0XHRpZiAoc2Vzc2lvbiAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHNlc3Npb24uc2V0VGltZW91dC5iaW5kKHNlc3Npb24pO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHN0cmVhbS5zZXRUaW1lb3V0LmJpbmQoc3RyZWFtKTtcblx0XHRcdH1cblxuXHRcdFx0Y2FzZSAnd3JpdGUnOlxuXHRcdFx0Y2FzZSAncmVhZCc6XG5cdFx0XHRjYXNlICdwYXVzZSc6XG5cdFx0XHRjYXNlICdyZXN1bWUnOlxuXHRcdFx0XHR0aHJvdyBuZXcgRVJSX0hUVFAyX05PX1NPQ0tFVF9NQU5JUFVMQVRJT04oKTtcblx0XHRcdGRlZmF1bHQ6IHtcblx0XHRcdFx0Ly8gUmVwbGFjZWQgW2tTb2NrZXRdIHdpdGggLnNvY2tldFxuXHRcdFx0XHRjb25zdCByZWZlcmVuY2UgPSBzdHJlYW0uc2Vzc2lvbiA9PT0gdW5kZWZpbmVkID8gc3RyZWFtIDogc3RyZWFtLnNlc3Npb24uc29ja2V0O1xuXHRcdFx0XHRjb25zdCB2YWx1ZSA9IHJlZmVyZW5jZVtwcm9wZXJ0eV07XG5cblx0XHRcdFx0cmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyA/IHZhbHVlLmJpbmQocmVmZXJlbmNlKSA6IHZhbHVlO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRnZXRQcm90b3R5cGVPZihzdHJlYW0pIHtcblx0XHRpZiAoc3RyZWFtLnNlc3Npb24gIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0Ly8gUmVwbGFjZWQgW2tTb2NrZXRdIHdpdGggLnNvY2tldFxuXHRcdFx0cmV0dXJuIFJlZmxlY3QuZ2V0UHJvdG90eXBlT2Yoc3RyZWFtLnNlc3Npb24uc29ja2V0KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gUmVmbGVjdC5nZXRQcm90b3R5cGVPZihzdHJlYW0pO1xuXHR9LFxuXG5cdHNldChzdHJlYW0sIHByb3BlcnR5LCB2YWx1ZSkge1xuXHRcdHN3aXRjaCAocHJvcGVydHkpIHtcblx0XHRcdGNhc2UgJ3dyaXRhYmxlJzpcblx0XHRcdGNhc2UgJ3JlYWRhYmxlJzpcblx0XHRcdGNhc2UgJ2Rlc3Ryb3llZCc6XG5cdFx0XHRjYXNlICdvbic6XG5cdFx0XHRjYXNlICdvbmNlJzpcblx0XHRcdGNhc2UgJ2VuZCc6XG5cdFx0XHRjYXNlICdlbWl0Jzpcblx0XHRcdGNhc2UgJ2Rlc3Ryb3knOlxuXHRcdFx0XHRzdHJlYW1bcHJvcGVydHldID0gdmFsdWU7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0Y2FzZSAnc2V0VGltZW91dCc6IHtcblx0XHRcdFx0Y29uc3Qge3Nlc3Npb259ID0gc3RyZWFtO1xuXHRcdFx0XHRpZiAoc2Vzc2lvbiA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0c3RyZWFtLnNldFRpbWVvdXQgPSB2YWx1ZTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZXNzaW9uLnNldFRpbWVvdXQgPSB2YWx1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRjYXNlICd3cml0ZSc6XG5cdFx0XHRjYXNlICdyZWFkJzpcblx0XHRcdGNhc2UgJ3BhdXNlJzpcblx0XHRcdGNhc2UgJ3Jlc3VtZSc6XG5cdFx0XHRcdHRocm93IG5ldyBFUlJfSFRUUDJfTk9fU09DS0VUX01BTklQVUxBVElPTigpO1xuXHRcdFx0ZGVmYXVsdDoge1xuXHRcdFx0XHQvLyBSZXBsYWNlZCBba1NvY2tldF0gd2l0aCAuc29ja2V0XG5cdFx0XHRcdGNvbnN0IHJlZmVyZW5jZSA9IHN0cmVhbS5zZXNzaW9uID09PSB1bmRlZmluZWQgPyBzdHJlYW0gOiBzdHJlYW0uc2Vzc2lvbi5zb2NrZXQ7XG5cdFx0XHRcdHJlZmVyZW5jZVtwcm9wZXJ0eV0gPSB2YWx1ZTtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHByb3h5U29ja2V0SGFuZGxlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/proxy-socket-handler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/validate-header-name.js":
/*!*************************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/validate-header-name.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst {ERR_INVALID_HTTP_TOKEN} = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/errors.js\");\nconst isRequestPseudoHeader = __webpack_require__(/*! ./is-request-pseudo-header.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/is-request-pseudo-header.js\");\n\nconst isValidHttpToken = /^[\\^`\\-\\w!#$%&*+.|~]+$/;\n\nmodule.exports = name => {\n\tif (typeof name !== 'string' || (!isValidHttpToken.test(name) && !isRequestPseudoHeader(name))) {\n\t\tthrow new ERR_INVALID_HTTP_TOKEN('Header name', name);\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvdmFsaWRhdGUtaGVhZGVyLW5hbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixPQUFPLHdCQUF3QixFQUFFLG1CQUFPLENBQUMsOEVBQWE7QUFDdEQsOEJBQThCLG1CQUFPLENBQUMsa0hBQStCOztBQUVyRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG5mbS1ib3QvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvdmFsaWRhdGUtaGVhZGVyLW5hbWUuanM/Yjc4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCB7RVJSX0lOVkFMSURfSFRUUF9UT0tFTn0gPSByZXF1aXJlKCcuL2Vycm9ycy5qcycpO1xuY29uc3QgaXNSZXF1ZXN0UHNldWRvSGVhZGVyID0gcmVxdWlyZSgnLi9pcy1yZXF1ZXN0LXBzZXVkby1oZWFkZXIuanMnKTtcblxuY29uc3QgaXNWYWxpZEh0dHBUb2tlbiA9IC9eW1xcXmBcXC1cXHchIyQlJiorLnx+XSskLztcblxubW9kdWxlLmV4cG9ydHMgPSBuYW1lID0+IHtcblx0aWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJyB8fCAoIWlzVmFsaWRIdHRwVG9rZW4udGVzdChuYW1lKSAmJiAhaXNSZXF1ZXN0UHNldWRvSGVhZGVyKG5hbWUpKSkge1xuXHRcdHRocm93IG5ldyBFUlJfSU5WQUxJRF9IVFRQX1RPS0VOKCdIZWFkZXIgbmFtZScsIG5hbWUpO1xuXHR9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/validate-header-name.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/http2-wrapper/source/utils/validate-header-value.js":
/*!**************************************************************************!*\
  !*** ./node_modules/http2-wrapper/source/utils/validate-header-value.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst {\n\tERR_HTTP_INVALID_HEADER_VALUE,\n\tERR_INVALID_CHAR\n} = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/http2-wrapper/source/utils/errors.js\");\n\nconst isInvalidHeaderValue = /[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/;\n\nmodule.exports = (name, value) => {\n\tif (typeof value === 'undefined') {\n\t\tthrow new ERR_HTTP_INVALID_HEADER_VALUE(value, name);\n\t}\n\n\tif (isInvalidHeaderValue.test(value)) {\n\t\tthrow new ERR_INVALID_CHAR('header content', name);\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvdmFsaWRhdGUtaGVhZGVyLXZhbHVlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsOEVBQWE7O0FBRXpCOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG5mbS1ib3QvLi9ub2RlX21vZHVsZXMvaHR0cDItd3JhcHBlci9zb3VyY2UvdXRpbHMvdmFsaWRhdGUtaGVhZGVyLXZhbHVlLmpzPzEzYTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge1xuXHRFUlJfSFRUUF9JTlZBTElEX0hFQURFUl9WQUxVRSxcblx0RVJSX0lOVkFMSURfQ0hBUlxufSA9IHJlcXVpcmUoJy4vZXJyb3JzLmpzJyk7XG5cbmNvbnN0IGlzSW52YWxpZEhlYWRlclZhbHVlID0gL1teXFx0XFx1MDAyMC1cXHUwMDdFXFx1MDA4MC1cXHUwMEZGXS87XG5cbm1vZHVsZS5leHBvcnRzID0gKG5hbWUsIHZhbHVlKSA9PiB7XG5cdGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0dGhyb3cgbmV3IEVSUl9IVFRQX0lOVkFMSURfSEVBREVSX1ZBTFVFKHZhbHVlLCBuYW1lKTtcblx0fVxuXG5cdGlmIChpc0ludmFsaWRIZWFkZXJWYWx1ZS50ZXN0KHZhbHVlKSkge1xuXHRcdHRocm93IG5ldyBFUlJfSU5WQUxJRF9DSEFSKCdoZWFkZXIgY29udGVudCcsIG5hbWUpO1xuXHR9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/http2-wrapper/source/utils/validate-header-value.js\n");

/***/ })

};
;